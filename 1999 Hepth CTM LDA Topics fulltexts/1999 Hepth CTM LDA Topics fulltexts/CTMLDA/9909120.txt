duke-cgtp-99-07 hep-th/9909120 0 0 0 2 g u 9 1 2 v 0 2 1 9 0 9 9 / h - p e h : v x r discrete torsion gerbes ii eric r. sharpe department physics box 90305 duke university durham, nc 27708 ersharpe@cgtp.duke.edu previous paper outlined discrete torsion understood geometrically, analogue orbifold u(1) wilson lines. paper shall prove remaining details. precisely, paper describe gerbes terms objects known stacks (essentially, sheaves categories), develop much basic theory gerbes language. then, relevant technology described, give rst-principles geometric derivation discrete torsion. words, dene equivariant gerbes, classify equivariant structures gerbes gerbes connection. prove general, set equivariant structures gerbe connection torsor group includes h 2(, u(1)), orbifold group. special cases, trivial gerbes, set equivariant structures furthermore canonically identied group. september 1999 1 contents 1 introduction 2 stacks 2.1 presheaf categories . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2.2 sheaf categories . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2.2.1 gluing law objects . . . . . . . . . . . . . . . . . . . . . . . . . . 2.2.2 gluing law morphisms . . . . . . . . . . . . . . . . . . . . . . . . 2.2.3 examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2.3 cartesian functors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2.4 2-arrows . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2.4.1 2-arrows . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2.4.2 sheaves natural transformations . . . . . . . . . . . . . . . . . . . 3 gerbes stacks 3.1 denitions examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3.2 equivalences gerbes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3.3 sheaf cohomology gerbes . . . . . . . . . . . . . . . . . . . . . . . . . . 3.4 gauge transformations gerbes . . . . . . . . . . . . . . . . . . . . . . . . . 3.5 connections gerbes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3.6 transition functions gerbes . . . . . . . . . . . . . . . . . . . . . . . . . . 3.7 nonabelian gerbes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 technical notes stacks 4.1 sheacation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4.1.1 sheacation presheaves sets . . . . . . . . . . . . . . . . . . . . 2 5 6 6 8 8 10 11 12 13 13 14 16 16 18 18 21 22 27 28 28 29 29 4.1.2 descent categories . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4.1.3 direct limits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4.1.4 lifts cartesian functors . . . . . . . . . . . . . . . . . . . . . . . . 4.1.5 lifts 2-arrows . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4.2 pullbacks stacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4.2.1 pullbacks stacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4.2.2 pullbacks cartesian functors . . . . . . . . . . . . . . . . . . . . . 4.2.3 pullbacks 2-arrows . . . . . . . . . . . . . . . . . . . . . . . . . . . 4.2.4 analogues natural transformations . . . . . . . . . . . . . . . . . . 4.3 stalks stacks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 technical notes gerbes 5.1 pullbacks gerbes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5.2 torsors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5.3 gauge transformations gerbes . . . . . . . . . . . . . . . . . . . . . . . . . 5.3.1 gauge transformations objects . . . . . . . . . . . . . . . . . . . . 5.3.2 induced equivalences categories . . . . . . . . . . . . . . . . . . . . 5.3.3 action connections . . . . . . . . . . . . . . . . . . . . . . . . . . 5.3.4 gauge transformations commute gerbe maps . . . . . . . . . . . 5.3.5 sheaves morphisms torsors . . . . . . . . . . . . . . . . . . . . . 5.3.6 sheaves natural transformations torsors . . . . . . . . . . . . . . 5.3.7 gerbe maps dier gauge transformations . . . . . . . . . . . . . . 5.3.8 maps gerbes equivalences gerbes . . . . . . . . . . . . . . . . 6 equivariant gerbes 30 33 35 38 39 40 43 45 46 48 48 49 49 51 51 53 57 58 59 62 64 66 68 3 7 equivariant gerbes connection 8 check: loop spaces 9 conclusions 10 acknowledgements references 71 73 75 75 75 4 1 introduction historically discrete torsion rather mysterious aspect string theory. discrete torsion originally discovered  ambiguity choice phases assign dierent sectors string orbifold partition functions. although work done subject, work done date succeeded giving sort genuinely deep understanding discrete torsion. fact, discrete torsion sometimes referred inherently stringy degree freedom, without geometric analogue. paper shall give purely geometric understanding discrete torsion, precise analogue orbifold u(1) wilson lines, (two-form) b-elds rather vector elds. {$9909108$} outlined description; paper shall prove technical details omitted {$9909108$}. upcoming paper  shall rederive results elementary fashion, also describe picture used derive physical manifestations discrete torsion. precisely, paper shall argue discrete torsion understood (discrete) ambiguity lifting action orbifold group space x 1-gerbe connection x, orbifold wilson lines understood ambiguity lifting action bundle connection. description makes assumptions nature may may freely-acting, may may abelian description holds true regardless. description discrete torsion hinges deeper understanding type ii b-elds common literature. specically, vector elds understood connections bundles, describe b-elds connections (1-)gerbes. although gerbes seem well-known circles, usefulness seem widely appreciated. accessible accounts gerbes provide level detail need seem exist, describe gerbes considerable detail. begin paper describing stacks (essentially, sheaves categories), section 2. next, give basic description gerbes terms stacks, section 3. order dene study equivariant structures gerbes, need rather technical results, collect sections 4 5, stacks gerbes. (readers studying paper rst time advised skip sections 4 5.) finally, dene equivariant structures gerbes, classify equivariant structures gerbes gerbes connection, deriving h 2(, u(1)) process. additional information gerbes, reader might consult . passing, mention addition description gerbes terms stacks, exist alternative descriptions. example, (equivalence classes of) gerbes described terms objects loop spaces, described (for example) . (we 5 briey review description, using check results, section 8.) one noteworthy description  known bundle gerbes . certain technical diculties description gerbes terms bundle gerbes, notably diculty determining whether two bundle gerbes isomorphic, shall refer paper. general, description gerbes useful clearly depends upon application mind personal preference. earlier version paper, argued dierence two equiv- ariant structures 1-gerbe connection element h 2(, u(1)). since corrected minor error calculation, weakened result claim dierence equivariant structures element group includes h 2(, u(1)). words, additional degrees freedom beyond encoded h 2(, u(1)), missed previously. 2 stacks reader might well ask object associated gerbe all, {$9909108$} really referred gerbes terms sheaf cohomology groups. answer gerbes understood terms sheaves categories, also known stacks, shall review section. presentation stacks closely follows , , . 2.1 presheaf categories dening sheaf categories, shall rst dene presheaf categories, sometimes also called prestacks. shall closely follow denitions . passing shall note stacks related ideas often dened respect grothendieck topologies sites, i.e., language descent, rather topologies physicists acquainted with. feel denitions add essentially irrelevant (for purposes) layer technical abstraction, circumvented them. (for denitions stacks terms sites, see example , , ; basic introduction ideas grothendieck topologies, see example .) dene presheaf categories, let us take moment review notion presheaf sets, following . presheaf sets space x assignment set s(u) every open set u x, together map v u : s(u) s(v ) associated inclusion v u : v u, w v u open sets, v u w v = w u 6 u u , map associated trivial inclusion u u, identity. dene presheaf categories shall follow similar pattern: shall associate category open set, functor inclusion open sets, certain constraints functors. presheaf categories c topological space x associates, open set u x, category c(u), every inclusion open sets : u2 u1, restriction functor : c(u1) c(u2), may taken identity whenever u1 = u2 = u = 1u . (a word notation: shall sometimes use notation c() |u2 instead paper.) passing, point every category c(u) need nonempty example, shall see later nontrivial 1-gerbe space x necessarily c(x) empty. restriction functors required satisfy two conditions. rst every pair composable inclusions open sets 1 : u2 u1 2 : u3 u2, one given invertible natural transformation1 1,2 : (12) = 2 1 second condition restriction functors one three composable inclusions 1 : u2 u1, 2 : u3 u2, 3 : u4 u3, following diagram natural transformations required commute: (123) = 3 (12) 2 3 1 (23) 1 = (1) assignment categories open sets, together inverse image functors satisfying two conditions above, denes presheaf categories. order get better grasp material, reader encouraged compare presheaf categories dened general denition presheaf. point example might help reader. possible describe presheaf sets special kind presheaf categories. this, consider set discrete category category whose objects elements set, whose morphisms identity morphisms mapping object back itself. shown fairly easily think set discrete category, presheaf sets special kind presheaf categories. 1readers closely watching related references note , natural transformations dened opposite direction. 7 going on, also describe presheaf categories contains within it, number presheaves sets. specically, given presheaf categories c space x, shall dene, open u x two objects pa, pb ob c(u), presheaf (of sets) homu (pa, pb) local morphisms pa pb. presheaf sets dened follows. open v u, set sections presheaf given homc(v )(pa|v , pb|v ). inclusion : u2 u1 open sets u1, u2 u, dene restriction map by, : 7 1 1,2 |u2 1,2 hom (pa|u2, pb|u2) hom(pa|u1, pb|u1). straightforward check restriction map satises axioms presheaf sets, homu (pa, pb) presheaf sets. order distinguish presheaf morphisms set morphisms, shall always denote presheaf hom set hom. passing, mention shall sometimes use notation autc(u )(p ) denote set homc(u )(p, p ), autu (p ) denote presheaf homu (p, p ). 2.2 sheaf categories shall use terms sheaf categories stack synonymously paper, though authors quite agree . conventions , two concepts distinguished, shall dene section technically stack, rather sheaf categories (which required satisfy stronger gluing condition objects ). giving technical denitions, let us review gluing conditions sheaf sets, gluing conditions shall modelled. following , given presheaf sets space x, say presheaf sheaf sets open set u x every open cover {u} u, {s s(u)} family elements u us = exists unique s(u) uu = . constraints presheaf categories sheaf categories closely related; one must give rather similar gluing condition objects morphisms categories. u u 2.2.1 gluing law objects first, shall dene gluing condition objects. let {u} open cover open set u x, suppose given family objects x ob c(u), family 8 isomorphisms : : x|u x|u satisfying compatibility condition = c(u), = 1 c(u). gluing holds objects (more technically, descent condition eective) x, exists object x ob c(u), together family isomorphisms : x|u following diagram commutes: x|u |u , x|u , x|u|u |u x|u |u x|u (2) used notation |u indicate restriction functor, , indicates natural transformation |u |u|u appearing denition presheaf categories. proceed gluing law morphisms, shall take moment reect gluing law objects given above. first, note one assume objects x|u|u , x|u |u , x|u ob c(u) object. rather, related invertible natural transformations restriction functors, nothing more. also mention sloppy part gluing law given above. strictly speaking, relation = make sense, even naively using restriction functors, morphisms question act distinct objects. order properly make sense relation, one must make use natural transformations restriction functors appearing denition presheaf. concretely, relation = replaced constraint following diagram commutes: 1 , x|u |u , 1 x|u , x|u |u |u x|u |u |u x|u |u 1 , x|u , x|u |u |u x|u |u 1 , x|u (3) finally, reader might ask extent object x constructed gluing law unique. certainly denition sheaves sets, gluing law specied unique objects, uniqueness mentioned denition above. fact, shown using gluing law morphisms dened next section object x unique unique isomorphism commuting . shall work 9 : x|u details, basic idea follows. x ob c(u) another object isomorphisms x make diagram (2) commute, dene set morphisms f : x|u x|u by, f = 1 . using gluing law morphisms glued together form unique morphism f : x x whose restriction u commutes , i.e, x|u x f |u x|u x = commutes, work shown f isomorphism. note dropped constraint restriction f commute , would lose uniqueness given f , could compose automorphism either x x obtain another morphism x x. 2.2.2 gluing law morphisms gluing condition morphisms stated follows. let u x open set, x, ob c(u), {u} open cover u. {f : x|u y|u} set maps f|u = f|u , exists unique f : x f = f |u. unfortunately phrasing slightly sloppy. strictly speaking, relation f|u = f|u make sense: objects x|u|u x|u |u (in general) distinct objects ob c(u), morphisms f|u f|u morphisms (in general) distinct objects c(u), cannot immediately compared. thus, must replace condition f|u = f|u condition following diagram commutes: x|u |u , x|u , x|u|u f |u f|u y|u|u 1 , y|u 1 , y|u|u (4) finally, note rephrase gluing condition morphisms somewhat elegantly saying morphisms satisfy gluing law pair objects x, ob c(u) open cover {u} u, ordinary sheaf (of sets) axiom gluing presheaf morphisms homu (x, y) satised. put another way, satisfying gluing condition morphisms equivalent presheaf sets hom sheaf sets. phrased yet another way, sheaf categories, presheaf sets morphisms hom sheaf sets, presheaf. 10 2.2.3 examples one easy example stack sheaf discrete categories associated sheaf sets. recall pointed earlier presheaf sets understood presheaf discrete categories. (identify elements set objects category. denition, morphisms discrete category identity morphisms, completely characterized categories.) easy check presheaf sets actually sheaf sets, corresponding presheaf (discrete) categories actually stack. trivial example stack stack principal g-bundles x, lie group g. precisely, dene stack c associating open set u x, category c(u) whose objects principal g bundles u, morphisms bundle isomorphisms2. straightforward check denes presheaf categories (with restriction functors dened naturally, natural transformations trivial), furthermore presheaf categories stack. shall denote example stack tors(g). now, let us describe example presheaf categories stack. fix principal g bundle p x, dene presheaf categories follows. open set u, associate category one object, equal p |u , let morphisms category automorphisms p |u . easy check denes presheaf categories, restriction functors dened naturally, natural transformations trivial. denote presheaf categories p. shall argue presheaf categories p stack general, observing always3 satisfy gluing law objects. let u x open subset x exists principal g bundle q u p |u q topologically equivalent p |u . let {u} good cover u. let g : u g denote transition functions q, dened respect cover {u}. dene family isomorphisms : p |u|u p |u|u = g , 1 , (trivial) natural transformations appearing denition presheaf categories p. (we made explicit completeness.) easy check isomorphisms satisfy gluing condition, gluing condition objects nd corresponding object p(u). new object essentially created tensoring local sections p |u local sections q, general local sections4 p |u q. (this argument somewhat weak; rigorous versions found 2in fact, morphism principal g-bundles xed g xed space x necessarily isomor- phism . 3in special cases, x contractible, p may stack. however, shall consider general x, p stack. 4in writing slightly loose statement, assuming g abelian. 11 section 5.3, discussion gauge transformations gerbes.) assumption, however, object exists p(u). thus, gluing law satised, presheaf categories p cannot stack. 2.3 cartesian functors let c denote two presheaves categories space x. map f : c dened  family functors f (u) : c(u) d(u), together with, every inclusion : u2 u1, invertible natural transformation : f (u1) f (u2) c. invertible natural transformations required property pair composable inclusions 2 : u3 u2, 1 : u2 u1, following diagram commutes: 1d f (u1) 2d 1,2 (12) f (u1) 1= 2d f (u2) 1c 12= 2= f (u3) c 2c 1c 1,2 f (u3) (12) c (5) invertible natural transformations appearing denition presheaf categories. maps presheaves categories called cartesian functors. note cartesian functor precisely functor, sense map categories, rather map presheaves categories. morphism stacks precisely morphism underlying presheaves categories, is, morphism stacks precisely cartesian functor. cartesian functors composed. is, c, d, e three presheaves categories x, f : c g : e two cartesian functors, one dene cartesian functor g f : c e. shall outline denition. open set u, functors f (u) : c(u) d(u) g(u) : d(u) e(u) certainly composed. given inclusion : u2 u1, dene invertible natural transformation gf composition natural transformations associated f g. words, gf e (gf )(u1) (gf )(u2) c dened : gf : e g(u1) f (u1) g = g(u2) f (u1) f = g(u2) f (u2) c shown gf satises pentagonal identity (5). now, mean two stacks equivalent? say two stacks c, equivalent exists cartesian functor f : c functor f (u) : c(u) d(u) associated open set u equivalence categories5. 5recall functor f : e f said equivalence categories e, f functor 12 shall show cartesian functor f : c presheaves categories c, induces morphism presheaves homc(u )(pa, pb) homd(u )(f (u)(pa), f (u)(pb)) open set u two objects pa, pb ob c(u). open v u, dene map sets (v ) : homc(v )(pa|v , pb|v ) homd(v )(f (u)(pa)|v , f (u)(pb)|v ) by, (v )() (cid:16)f u,v (pb)(cid:17)1 f (v )() f u,v (pa) : pa|v pb|v , f denotes invertible natural transformation dening f cartesian functor. straightforward check denes morphism presheaves sets, words, every inclusion : u2 u1 open u1, u2 u, following diagram commutes: homu (pa, pb)(u1) (u1) homu (f (u)(pa), f (u)(pb))(u1) (6) homu (pa, pb)(u2) (u2) homu (f (u)(pa), f (u)(pb))(u2) 2.4 2-arrows dened analogues functors presheaves categories (namely, carte- sian functors), shall dene analogues natural transformations cartesian func- tors. analogues natural transformations known 2-arrows . shall also dene sheaves sets describing local natural transformations cartesian functors. 2.4.1 2-arrows let f, g : c cartesian functors pair presheaves categories c, space x. 2-arrow : f g family natural transformations (u) : f (u) g(u) (one open u x), that, inclusion : u2 u1, following diagram commutes: (u1) = g(u1) f (u1) f f (u2) c g (u2) = g(u2) c (7) g : f e invertible natural transformations ide gf idf f g, i.e., ide = gf idf = f g. 13 natural transformations appearing denition cartesian functors. passing, note 2-arrows composed. words, f, g, h : c cartesian functors 1 : f g, 2 : g h pair 2-arrows, composition 2 1 : f h well-dened 2-arrow. invertible 2-arrow 2-arrow (u) invertible natural transforma- tion open u x. 2.4.2 sheaves natural transformations let f, g : c cartesian functors pair presheaves categories c d, space x. fix open set u x. shall dene presheaf sets 2ru (f, g) shall describe local 2-arrows f g, well presheaf sets nt u (f, g), related sheaf shall describe local natural transformations f g. shall dene presheaf 2-arrows f |u g|u , shall denote 2ru (f, g). open v u, dene set 2ru (f, g)(v ) set 2-arrows f |v g|v . words, element 2ru (f, g)(v ) collection natural transformations (w ) : f (w ) = g(w ) (one open w v ), inclusion : w2 w1 open sets w1, w2 v , following diagram commutes: f (w1) (w1) = g(w1) f f (w2) (w2) = g(w2) g (8) natural transformations dening f , g cartesian functors. restriction maps presheaf 2ru (f, g) dened follows. let : v2 v1 denote inclusion open sets v1, v2 u. element 2ru (f, g)(v1) collection natural transformations (w ) : f (w ) g(w ), w v1, above. dene new collection natural transformations obtained collection removing elements corresponding open w v2 w v1. clear denitions yield presheaf sets. example, 2 : v3 v2 1 : v2 v1 pair composable inclusions open sets, 2ru (f, g)(v1), 1 = (12). 2 special case stack, presheaf categories, shown 2ru (f, g) sheaf sets, presheaf. shall outline details here. let 14 v u open set, let {u} open cover v . let { 2ru (f, g)(u)} set elements , (where natural inclusions u u u, u). need show exists unique 2ru (f, g)(v ) = (where : u v inclusion). , = finding 2-arrow means nding set natural transformations (w ) : f (w ) g(w ), one open w v , obeying usual compatibility condition. let p ob c(w ), dene (w )(p ) unique morphism generated gluing together morphisms (g )1 (w u)(p |w u) f : f (w )(p )|w u g(w )(p )|w u straightforward check denes natural transformation (w ) : f (w ) g(w ) open w v , also natural transformations satisfy diagram (8). thus, dened unique 2-arrow = , shown gluing law sheaves sets satised. thus, stack, presheaf sets 2ru (f, g) sheaf sets. addition presheaf sets 2ru (f, g), one also dene another presheaf natural transformations, shall label nt u (f, g). use presheaf limited; mention solely completeness. open v u, dene set nt u (f, g)(v ) set natural transformations f (v ) |v = g(v ) |v |v indicates restriction functor c(u) c(v ). inclusion : u2 u1 open sets u1, u2 u, dene restriction map : nt u (f, g)(u1) nt u (f, g)(u2) by, c1 1,2 g (f )1 c 1,2 nt u (f, g)(u1) (i.e., : f (u1) |u1 g(u1) |u1), c natural transformations dening c presheaf categories, natural transformations dening f , g cartesian functors. straightforward check denes presheaf sets. example, two composable inclusions 1 : u2 u1, 2 : u3 u2, u1, u2, u3 u, restriction maps obey 1 = (12) : f (u1) |u1 g(u1) |u1. 2 special case stack, presheaf categories, straightforward check nt u (f, g) sheaf sets, presheaf, open u x. passing, note 2-arrow : f |u g|u denes element nt u (f, g)(v ) open v u d(v ) 6= , moreover : u2 u1 inclusion open sets, (u1) = c1 1,2, i.e., restriction functor relates elements natural way. 1,2 (u2) c 15 3 gerbes stacks brief readable discussion gerbes terms stacks, see example . detailed information available . section reviews material found , , . 3.1 denitions examples stack c called (1-)gerbe following three conditions satised: 1. every open set u x, every morphism category c(u) invertible. (in technical language, means c(u) groupoid.) 2. point x x neighborhood ux c(ux) nonempty. 3. two objects p1, p2 c(u) locally isomorphic. words, x u neighborhood vx restrictions p1 p2 vx isomorphic. one says gerbe c bound sheaf abelian groups (or, gerbe band a) open set u object p ob c(u), exists isomorphism = autu (p ). isomorphisms required satisfy sheaves groups u (p ) : a|u constraint shall describe shortly. rest paper, speak gerbes, implicitly refer gerbes bound sheaf abelian groups. passing, point since (u)(p ) morphism sheaves groups, compatible restriction, i.e., following diagram commutes: a(u1) a(u2) u (u1)(p ) homc(u1)(p, p ) u (u2)(p |u2 ) homc(u2)(p |u2, p |u2) (9) restriction maps dening sheaves sets, p ob c(u1), : u2 u1 inclusion open sets u1, u2 u. mentioned isomorphisms u (p ) : a|u autu (p ) required satisfy condition, shall explain. let u open set, let p1, p2 ob c(u), let homc(u ) (p1, p2), let g aut(p1). morphism g 1 aut(p2), fact inner automorphisms form clearly dene group homomorphism (in fact, isomorphism) aut(p1) aut(p2). put another way, g aut(p1), exists g aut(p2) g = g , g g isomorphic element group a(u). generally, morphism denes morphism sheaves : autu (p1) autu (p2) 16 nally state constraint isomorphisms u (p ). u (p ) required following diagram commutes: a|u k a|u u (p1) autu (p1) u (p2) autu (p2) (10) 1-gerbes discussed {$9909108$} describe gerbes band c (u(1)). see general gerbes dened. trivial example 1-gerbe band c (g) (for g abelian lie group) stack tors(g), stack principal g-bundles, introduced earlier. fact, shall see later gerbes band c (g) look locally like tors(g), sense ber bundles look locally like trivial bundle. nontrivial example 1-gerbe band c (u(1)) stack describing spinc(n) lifts principal so(n) bundle, shall describe. (relevant information found .) let p principal so(n)-bundle x. shall describe 1-gerbe, call c, implicitly describes obstructions lifting structure group p so(n) spinc(n). (we shall roughly follow .) open set u x, dene objects c(u) pairs (q, ), q principal spinc(n) bundle u lift p |u , : q p |u morphism principal bundles. (note p admit global lift, c(x) = , example.) morphisms objects c(u) dened follows. let (q, ), (q, ) two objects c(u). morphism u : (q, ) (q, ) dened morphism6 u : q q principal spinc(n) bundles, following diagram commutes: u q q p |u = p |u (11) straightforward check structure denes stack, furthermore 1- gerbe. element h 3(x, z) associated 1-gerbe precisely classies obstruction lifting structure group p spinc(n). category c(x) nonempty, objects principal spinc(n) bundles x, globally dened lifts principal so(n) bundle p . generally, shall see later nontrivial gerbe space x distinguished trivial gerbe x category c(x). category nonempty, gerbe trivial objects c(x) dene trivializations gerbe, global sections principal bundle trivialize bundle. shall return matter later. 6recall  u : q1 q2 morphism principal bundles space ber, necessarily isomorphism. thus, morphisms dene c(u ) necessarily isomorphisms. 17 3.2 equivalences gerbes let c 1-gerbes, band (a sheaf abelian groups). circumstances say c equivalent ? map two gerbes c specied band dened cartesian functor f : c open sets u p ob c(u), following diagram sheaves groups commutes (by denition morphism sheaves): autc(u )(p ) c(u )(p ) f (u ) autd(u )(f (u)(p )) d(u )(p ) a|u = a|u (12) isomorphisms band automorphisms object (given denition band), used f (u) denote induced morphism sheaves (here, sheaves abelian groups) discussed section cartesian functors. intuitively, condition means action band gerbe commutes cartesian functor. equivalence two gerbes c, band dened cartesian functor f : c obeying constraint (12), cartesian functor denes equivalence stacks. shall show section 5.3.8 map two gerbes band, space, necessarily equivalence gerbes. closely analogous result morphism principal g-bundles, xed g, space, necessarily isomorphism . 3.3 sheaf cohomology gerbes {$9909108$} claimed gerbes classied elements sheaf cohomology groups. derive element h 2(x, a) description gerbes given above? shall work details subsection. precisely, shall show obtain cech representative relevant sheaf cohomology group, associated xed open cover. convenience, shall assume band = c (u(1)), though reader able easily extend general cases. describing associate sheaf (and also, usually, cech) cohomology elements gerbes, shall take moment review procedure works sheaves local sections bundles. let sheaf local sections principal g-bundle space x, let {u} good open cover x. let {s} choice local sections respect cover {u} (i.e., i(u) ). overlap 18 u = u u, sections s|u s|u dier element c (g) u. denote element g. straightforward check g dene cocycle representative element h 1(x, c (g)) (or, rather, corresponding cech cohomology group associated cover {u}). picking dierent local sections corresponds changing cocycle coboundary. thus, derived element h 1(x, c (g)) classifying sheaf i. finally, note admits global section exist sections s|u s|u agree overlaps, i.e., g identity overlap, i.e., corresponding element sheaf cech cohomology trivial. described associate cech cohomology elements given sheaf local sections bundle, shall discuss associate cohomology elements gerbes. shall see details closely analogous case above. let {u} good cover x, i.e., cover every element every intersection elements contractible. shall assume sucient every object category c(u) isomorphic. (if not, pick suitable renement {u}.) then, let p denote object c(u). (since objects c(u) isomorphic, precise choice p irrelevant.) let u denote isomorphisms u : p|u p|u u = uu, implicitly assume u = u1 dene h : u u(1) . suppose u = uu u 6= . h = u u u aut(p|u ) fact, slightly sloppy distinction objects x|u|u x|u , example. rigorously dene h must introduce invertible natural transformations dening c presheaf categories. dene maps u, : p|u p|u by, u, = 1 , u| , rigorous denition h h = u, u, u, aut(p|u ) straightforward check h denes cech 2-cocycle. naively, description h might appear always coboundary, h naively appears coboundary 1-cocycle dened u. however, important distinction work here. u, maps (in general) distinct objects, automorphisms single object. since maps distinct objects, 19 (in general) valued band gerbe. thus, h trivial cech cocycle general. , u also shown {p, u} {p } two choices objects isomorphisms, 2-cocycles h, h dened either dier coboundary. shall leave details verication reader, passing mention three important points come up. first, one needs fact elements band commute p set morphisms, demonstrated earlier. second, let : p isomorphisms, useful fact commute natural transformations used dene presheaf categories, denition natural transformation. finally, note u |u u |u may dier element band, general. 1 thus, set choices {p, u} dene element cohomology. furthermore, two equivalent gerbes dene element cohomology. let f : c map two gerbes x band a, also denes equivalence gerbes. let {u} good open cover x, let {p ob c(u)} set objects, p|u } set isomorphisms. {f (u)(p) ob d(u)} {u : p|u set objects d, nf (u)(u) : f (u)(p|u ) f (u)(p|u )o set isomorphisms objects d. objects isomorphisms dene cocycle hd , noted above, cohomology class cocycle independent choice objects isomorphisms. thus, two equivalent gerbes dene element cohomology. astute reader may slightly confused paragraph above. nowhere discussion seem use fact f : c equivalence gerbes; used fact map gerbes. particular, reader might concerned could derive contradiction: f equivalence gerbes, get cohomology element. however, shall show section 5.3.8 map gerbes band space necessarily equivalence gerbes. thus, possible f equivalence gerbes, potential contradiction averted. far described sheaf cohomology element associated given gerbe. converse also possible given sheaf cohomology element, construct associated gerbe. construction carried in, example, . shall repeat construction here, passing shall mention uses techniques closely akin descent categories describe section 4.1.2. clear equivalence classes gerbes band space x one-to-one correspondence elements h 2(x, a). 20 let us take moment try gain intuition meaning sheaf cohomol- ogy description gerbes. suppose gerbe c space x described cohomologically- trivial cocycle h; imply gerbe? h coboundary, p|u arrange h = 1. slight redenitions isomorphisms u : p|u (simply compose isomorphism automorphism dictated cochain dening coboundary; use fact elements band commute morphisms.) then, use gluing law objects construct object c(x). thus, gerbe described cohomologically-trivial cocycle c(x) 6= . conversely, straightforward check c(x) 6= , corresponding element cohomology trivial. closely analogous fact global section principal g-bundle trivialization bundle; here, object c(x) trivialization gerbe. particular, let us consider example gerbe tors(g), g abelian lie group, space x. case, tors(g)(x) 6= , is, exists globally dened object (in fact, several globally dened objects, general), clear good open cover {u} one pick objects {p} isomorphisms {u} h = 1. words, tors(g) example gerbe globally dened object, implies corresponding element cohomology trivial. tors(g) example trivial gerbe. spinc gerbes, discussed earlier, somewhat interesting. general discussion above, class gerbes band c (u(1)), topologically classied elements h 2(x, c (u(1))) = h 3(x, z) indeed, discussing whether so(n)-bundle lifted spinc(n)-bundle, arises element h 3(x, z), usually labeled w3, image bockstein homomorphism second stiefel-whitney class so(n)-bundle question. characteristic class w3 precisely integral characteristic class classifying spinc gerbe. so(n)-bundle admits spinc lift w3 vanishes, precise accord general framework 1-gerbe admits global trivialization classifying integral characteristic class vanishes. global trivialization spinc gerbe associated so(n)-bundle precisely spinc lift bundle. 3.4 gauge transformations gerbes gauge transformation principal g-bundle space x dened map x g, turns gauge transformation gerbe band7 = c (g) principal g-bundle. (in terminology introduced {$9909108$}, gauge transformation n-gerbe 7more generally, gauge transformation 1-gerbe band dened a-torsor. specically trying avoid using language torsors subsection. 21 dened (n 1)-gerbe.) (note implicitly assuming g abelian lie group.) strictly speaking, equivalence classes principal g-bundles distinct ac- tions, shall defer discussion technicality later. precisely principal g-bundle act gerbe band c (g)? complete discussion technical details beyond intended scope section see instead section 5.3 complete discussion. however, give general intuition. suppose, example, objects c(u) line bundles u. case, action amounts tensoring object i. yields, object p , map p 7 p i. (we use notation p instead something like p end day, need manipulating bundles. again, see section 5.3 details.) principal g-bundle yield action objects c(u), also used dene self-equivalence category c(u). section 5.3 give number results related gauge transformations gerbes. one result, noted above, gauge transformation gerbe dened bundle (a 0-gerbe), gauge transformation bundle given function (a (-1)-gerbe). also argue gauge transformations gerbes commute gerbe maps, gauge transformations principal bundles commute principal bundle maps, map two gerbes band, space, necessarily isomorphism, morphism principal g-bundles, xed g xed space, necessarily isomorphism. finally, shall argue gerbe band c (g) looks locally like trivial gerbe tors(g), principal bundle looks locally like trivial principal bundle. 3.5 connections gerbes subsection shall restrict gerbes band c (u(1)), convenience. now, one dene connection 1-gerbe, dened terms stacks above? tempting proceed follows. (this description wrong, useful pedagogi- cally.) let {u} open cover. identify c(u) tors(u(1))(u), i.e., identify objects c(u) principal u(1)-bundles u. open set u principal u(1) bundle l, associate connection . note since l need trivial, since u need contractible, reason expressible terms single 1-form denable u. let f denote curvature u. tempting (and incorrect) identify b-eld associated u f . then, overlaps, f f = 0 cohomology, exists 1-forms f f = da. could clearly build cech-de rham complex describing connection gerbe, 22 described {$9909108$}. unfortunately, natural-looking idea work general. essential problem would dene 3-form h always zero cohomology, h|u = df = 0. put simply, b-eld associated open set need closed, whereas idea described paragraph would always necessarily associate closed 2-form u. correct way associate connection 1-gerbe somewhat complicated explain. section shall make frequent use idea torsor. strenuously avoided speaking torsors previous sections, point use becomes un- avoidable. torsors dened section 5.2; shall assume henceforward reader acquainted material section. connections gerbes dened  terms connective structures curv- ings gerbe. order get intuition meaning concepts, shall take moment dene analogues connective structure curving bundle. xed principal u(1)-bundle space x, connective structure dened 1(x)-torsor consisting connections principal u(1)-bundle. connective structure required obey constraint gauge transformation : x u(1) de- nes automorphism connective structure, section connec- tive structure (a single connection bundle) transforms as, () = ln . one denes curving, map assigns closed 2-form k() sec- tion connective structure, 1. : x u(1) gauge transformation, k(()) = k() 2. 1(x), k( + ) = k() + clearly curving corresponds curvature connection . notions connective structure curving bundle seem quite clumsy, how- ever useful discussing gerbes. given basic intuitions, shall give rigorous denition connection 1-gerbe. formally described assigning connective structure curving gerbe, call c. shall closely follow presentation . let 1(u) denote sheaf 1-forms open set u. (note 1(u) sheaf abelian groups u.) connective structure gerbe c dened cartesian functor co : c tors(1) underlying stacks, subject following constraint. let u open set 23 p ob c(u), let section 1(u)-torsor co(u)(p ), let g : p p automorphism p , shall identify element band. demand co(u)(g)() = ln g. point shall introduce notation. isomorphism : p1 p2 objects c(u), image functor co(u) denoted . words, = co(u)(). inclusion : u1 u, let denote invertible natural transformation co(u) co(u1) appearing denition co cartesian functor. (readers also studying  note reference, co(u)(p ) abbreviated co(p ), natural transformation denote denoted .) example gerbe connective structure order point. consider (trivial) gerbe tors(g) principal g-bundles, assume g abelian lie group. example connective structure tors(g) one obtained assigning, principal g-bundle p open set u, 1(u)-torsor connections p . words, dene co(u)(p ) 1(u)-torsor connections p , isomorphism f : p1 p2 dene co(u)(f ) morphism (u, co(u)(p1)), morphism f : (p1, ) (p2, co(u)(f )()) equivalence bundles connection. one dene rest structure cartesian functor obvious way. shown gerbe band c (u(1)) admits connective structure. shall work details argument here; see instead, example, . note  : g g denes equivalence two gerbes g, g space x, band c (u(1)), gerbe g connective structure, call co, connective structure co g pulled back form connective structure co g. specically, co = co . clear natural notion equivalence gerbes connec- tion structure. let (g1, co1) (g2, co2) pair gerbes connective structure. say cartesian functor : g1 g2 denes equivalence gerbes connective structure 1. denes equivalence gerbes, 2. exists invertible 2-arrow : co1 co2 cartesian functors co1 co2 . example, shall see later principal u(1) bundle denes gerbe automorphism 24 ic : c c, case, 2-arrow dened equivalent choice connection bundle. dierence two connections principal u(1) bundle x 1-form x, i.e., element 1(x), shown  dierence two connective structures gerbe x given 1(x)-torsor. far yet describe precisely associate b eld 1-gerbe. b elds described curving connective structure introduced above. precisely, given gerbe c x connective structure co, dene curving connective structure follows. curving connective structure rule assigns object p ob c(u) section 1(u)-torsor co(u)(p ), (r-valued) 2-form k() u, called curvature8 , following three properties satised: 1. given inclusion : u1 u, curvature k(()) section () co(u1)(p ) equal k(), denotes natural transformation dening co cartesian functor. 2. let : p p isomorphism another object p ob c(u). let () corresponding section co(u)(p ). k() = k(()). 3. let 1(u). k( + ) = k() + d. last two conditions curving, see k associates isomorphism class objects c(u), 2-form (an element 2(u), necessarily closed) modulo exact 2-forms. shown  that, given connective structure co gerbe, always exist curvings. passing, mention 1, 2 : g1 g2 pair gerbe maps gerbes g1, g2, : 1 2 2-arrow, curving k (g2, co), immediate consequence denition curving k() = k( ) ) (u, (co1)(u)(p )), open u object p ob g1(u). intuitively, means (i, ), (i , ) two bundles connection isomorphic (as 8the reader note 2-form denote curvature connection, curvature usual sense. rather, merely 2-form necessarily closed associated connection. nomenclature unfortunate, seems standard. 25 bundles connection), associated 2-forms k() k() identical 2-forms k equivalence classes bundles connection. suppose two gerbes connective structure (g1, co1) (g2, co2) come specied curvings k1, k2, respectively. say denes equivalence gerbes connective structure curving 1. (, ) denes equivalence gerbes connective structure, : co1 co2 associated 2-arrow connective structures, 2. open u, objects p ob g1(u), (u, co1(u)(p )), k1( ) = k2( () ) earlier, mentioned gerbe automorphism ic dened principal bundle i, specifying 2-arrow : co co ic equivalent specifying connection bundle. order automorphism gerbe connective structure automorphism gerbe connective structure curving, constraint ks implies connection must at. dene equivalence gerbes connection equivalence gerbes connective structure curving. shall usually use former notation rather latter, briefer. make contact description connection given earlier section 3? let {u} good cover x, objects one category c(u1n) isomorphic. open set u, curving k associates 2-form (not necessarily closed), dened addition exact 2-form. 2-forms precisely 2- forms appearing earlier denition connections 1-gerbes. rest earlier description connections principal u(1) bundles overlaps understood directly terms transition functions. earlier argued principal g-bundles dene gauge transformations gerbes band c (g); gauge transformation act connective structure curv- ing? shall examine detail section 5.3.3; shall outline results here. let denote principal g-bundle dening gauge transformation 1-gerbe. let p ob c(u). argued earlier denes map p 7 p (i|u ). now, precise specication particular section (u, co(u)(p )) mapped equivalent specication connection . (note passing statement dovetails earlier observation two connective structures dier 1-torsor.) explicitly, let {a} connection i|u , dened respect open cover {u} u. words, 1-form u. (u, co(u)(p |)), action gerbe, 7 + a. 26 far described bundle dening gauge transformation acts connective structure. act curving? clear denition curving k( + a) = k() + da. thus, recovered description gauge transformations gerbe connections outlined {$9909108$}. 3.6 transition functions gerbes section 5.3.5, show c gerbe band9 = c (g), open u c(u) nonempty, category c(u) equivalent category tors(g)(u). use fact dene transition functions gerbes. now, term explained described gerbes terms sheaves categories, analogously describing bundles terms sheaves sections. transition functions necessary component description. however, certainly recover transition functions, choose so. (for discussion sheaves sets terms transition-function-like language, see example .) transition functions gerbe clear. given open cover {u} x c(u) 6= , set equivalences categories c(u) tors(g)(u), clear could describe gerbe terms transition functions categories tors(g)(u). words, specify gerbe specifying principal g-bundles overlaps u = u u. bundle determines functor, determines tors(g)(u) mapped tors(g)(u). elements cech cohomology classifying gerbe determined tensor products bundles triple overlaps; conversely, one wishes describe gerbe xed cech cohomology, one demand tensor products bundles triple overlaps appropriate canonical trivializations. description precisely analogous describing bundles terms gauge transformations overlaps, describing local trivializations mapped one another. note furthermore description precisely description 1-gerbes given . clear order describe 1-gerbe connection, one would specify principal g-bundle connection overlap u. morphisms principal g-bundles (of structure group, space) described local trivializations set gauge transformations  9more generally, open u c(u ) nonempty, category c(u ) equivalent category tors(a)(u ) a-torsors u . : u g 27 one element u open cover {u}. clear one describe map gerbes similar fashion: u, associate principal g-bundle t. bundle determines automorphism category tors(g)(u), describes gerbes mapped one another level local trivializations. also clear map gerbes connection described terms set principal g-bundles connection. 3.7 nonabelian gerbes physics literature sometimes claimed10 certain physical theories understanding terms nonabelian gerbes. rest paper specialized abelian gerbes, is, gerbes abelian band. abelian gerbe described terms stack locally looks like stack principal g-bundles abelian g, presumably case nonabelian gerbe described terms stack locally looks like stack principal g-bundles nonabelian g. unfortunately, dicult say within present framework. much discussion gerbes hinged, either implicitly explicitly, assumption band sheaf abelian groups. made thorough study matters would altered band became nonabelian. considerably information nonabelian gerbes found . related mate- rial found {$9909108$}. 4 technical notes stacks section give highly technical material stacks. reader perusing paper rst (or even second third) time strongly encouraged skip section entirely. particular, shall describe sheacation presheaves categories, pullbacks stacks, stalks stacks. basics topics outlined . 10for example, see {$9909108$}. 28 4.1 sheacation given presheaf sets, possible construct sheaf sets process sometimes called sheacation. similarly, given presheaf categories, possible construct sheaf categories. section shall describe procedure. warn reader section extremely technical nature. reader visiting material rst time urged skip ahead next section. first, shall review sheacation presheaves sets, shall describe process presheaves categories. sheacation presheaves categories, one denes family descent categories, takes direct limit descent categories. shall devote subsections notions. finally, shall describe lift cartesian functor presheaves categories cartesian functor sheacations. bulk discussion based material . 4.1.1 sheacation presheaves sets first, let us take moment review sheacation works presheaves sets, following . (for less technical review, see example .) let f presheaf sets space x, pick open set u x. want build sheaf sets f , i.e., presheaf sets f bijective correspondence elements f (u) collections {s f (u)}, {u} open cover u, s|u = s|u . basic idea build f (u) taking elements, collections {s f (u)} {u} open cover, s|u = s|u . words, build set f (u) bijective correspondence elements set local elements satisfying compatibility conditions built denition. formally, set f (u) constructed follows. take f (u) disjoint union open covers {u} u collections {s f (u)} s|u = s|u , modulo equivalence relation . words, f (u) = {u} n {s f (u)} | s|u = s|u / (13) equivalence relation dened follows. identify two collections {u, s} , }, } exists another open cover {u }, renement {u} {u {u whenever u u u , s|u = |u . 29 rewrite equation (13) terms direct limit open covers, f (u) = lim {u} n {s f (u)} | s|u = s|u partial ordering open covers {u} provided notion renement. note f sheaf, presheaf, f = f , i.e., open sets u, f (u) = f (u). 4.1.2 descent categories let c denote presheaf categories space x, let u denote open set x. order dene category c(u) associated sheaf c, shall take direct limit descent categories dened open set u. subsection shall describe descent categories. subsequent subsections shall describe process taking direct limits, resulting sheacation. open cover {u} u, shall dene category, shall denote called descent category. descu (c, {u}) objects desc(c, {u}) collections {(x), ()}, x ob c(u), : x|u x|u isomorphisms, (schematically11) c(u), = 1 c(u). = morphisms {(x), ()} {(y), ( )} desc(c, {u}) collections morphisms {f : x y} {c(u)} following diagram commutes: x|u x|u f|u y|u f|u y|u (14) note c sheaf categories, presheaf, open cover {u} u, category desc(c, {u}) equivalent c(u). 11the correct statement commutativity diagram (3). 30 suppose {u i} renement {u} : {u i} {u} inclusion, i.e., collection maps {i : u u(i)}. induces functor : desc(c, {u}) desc(c, {u i}) action object {(x), ()} ob desc(c, {u}) given : : (x) 7 (xi x(i)|u () 7 (cid:16)ij i,ij 1 ) (i)(j),ij (i)(j)|u ij j,ij(cid:17) (i)(j),ij 1 invertible natural transformations appearing denition presheaf categories c. one verify (after extremely lengthy diagram chase) functor well-dened objects, i.e., image set morphisms () satises compatibility relation (3). still need dene action proposed functor morphisms. given objects {(x, ()}, {(y), ( )} ob desc(c, {u}) morphism dene {f : x y} : {(x), ()} {(y), ( )} io y(i)|u {f} = nfi f(i)|u : x(i)|u shown map well-dened, i.e., appropriate version diagram (14) commutes. straightforward check indeed dene functor : desc(c, {u}) desc(c, {u i}) now, suppose 1 : {u i} {u} 2 : {u } {u associated renement {u exists invertible natural transformation : (12) i} {u}, renement {u 2 1. i} pair families inclusions, i}. } {u invertible natural transformation dened follows. object {(x), ()} ob desc(c, {u}) associates morphism ({(x), ()}) : (12){(x), ()} ( 2 1){(x), ()} given ({(x), ()}) = n i(a),a(x(a)|u ) : x(a)|u x(a)|u i(a) |u 31 invertible natural transformations appearing denition c presheaf categories. straightforward check indeed morphism, i.e., appropriate version diagram (14) commutes, moreover invertible natural transformation. finally, straightforward check given three composable inclusions open covers 1, 2, 3, following diagram (corresponding diagram (1)) natural transformations commutes: (123) = 3 (12) 3 2 1 (23) 1 = far discussed functors associated sets inclusion maps two open covers xed open set u. functors also constructed, shall discuss. suppose : v u inclusion open sets. then, open cover {u} u, induces functor v,{u} descent categories associated u v : v,{u} : descu (c, {u}) descv (c, {u|v }) used fact {u|v } open cover v . functor dened precise analogy previously-described functor descent categories open covers single open set u; shall repeat details, virtually identical. similarly, given two inclusions 2 : u3 u2 1 : u2 u1, one dene (as above) invertible natural transformation 12 : (12) 1 u2,{u}, analogues diagram (1) commute. 2 u3,{u|u2 } u3,{u} finally, also construct natural transformations compositions two types functors listed above. let 12 : {u 2 } set inclusions covers open set u x, let : v u inclusion map open sets, inducing functors |v } set inclusion maps covers v makes following diagram commute: }. let v,12 : {u 2 |v } {u 1 } } {u 1 v,{u 1 v,{u 2 {u 1 } 12 {u 2 } v,{u 1 } {u 1 |v } v,12 v,{u 2 } {u 2 |v } (15) dene following two invertible natural transformations: v,12 : 12,v : (12 v,{u 2 (v,{u 1 }) } v,12) } 12 v,12 v,{u 2 v,{u 1 } natural transformations also make analogues diagram (1) commute. 32 4.1.3 direct limits given presheaf categories c open u, descent categories desc(c, {u}), construct associated sheaf categories. sheaf categories c associated presheaf categories c dened c(u) = lim {u} desc(c, {u}) (16) words, c(u) dened direct limit open covers u descent categories. shall give denition direct limit used above. objects direct limit (16) disjoint union objects descent categories associated open covers u. words, ob lim {u} desc(c, {u}) = {u} ob desc(c, {u}) (17) now, shall describe morphisms direct limit category. let p1, p2 objects: p1 ob desc(c, {u 1 p2 ob desc(c, {u 2 } (open cover) renement {u 1 }) }) } {u 2 } {u 2 } two sets inclusions, dene s{u 3 13p1 23p2 desc(c, {u 3 }). let {u 3 23 : {u 3 morphisms : }, let 13 : {u 3 } {u 1 } } set dene set morphisms hom(p1, p2) disjoint union s{u {u } (open cover) renement {u 1 dened momentarily. words, } (for }), modulo equivalence relation } {u 2 hom(p1, p2) = s{u }/ {u } equivalence relation dened follows. {u} {u } two open covers rene {u 1 } {u 2 }, : {u} {u : {u } {u } } sets inclusion maps (i {1, 2}), say : : 1 p1 {u} {u }, sets inclusion maps 2 p2 s{u } exists (open cover) renement {u 1p1 2p2 s{u} equivalent } : {u : {u } {u} } {u } 33 1. = {1, 2}, 2. following diagram commutes: (1)(p1) 1 1 (p1) 1 1(p1) () 2(p2) 2 () 2 (p2) 2 (2)(p2) (18) natural transformations dened previous subsection. dened objects morphisms categories c(u). shall take mo- ment discuss composition morphisms category, correct denition might completely obvious reader. let p1, p2, p3 ob c(u), i.e., pi ob descu (c, {u }) open covers {u } u, {1, 2, 3}. let hom c(u )(p1, p2), hom c(u )(p2, p3). words, exist renements {u 4 }, }, {u 5 } {u 3 } {u 2 } {u 1 } {u 2 homdesc(c,{u 4 homdesc(c,{u 5 }) ( } ( 14p1, 25p2, 24p2) 35p3) dene composition follows. let {u 6 {u 5 }, 2446 = 2556. dene } renement {u 4 } 1 356 56 256 1 246 46 146 homdesc(c,{u 6 }) ( 16p1, 36p3) natural transformations dened previous subsection. straight- forward check composition well-dened, i.e., implies . far discussed construct categories c(u) appearing sheaf associated presheaf categories c. completely dene sheaf must also specify restriction functors natural transformations, shall do. let : v u inclusion open sets. shall show induces functor : c(u) = lim {u} descu (c, {u}) c(v ) = lim {u } descv (c, {u }) first shall describe acts objects. recall object c(u) object, call p , descu (c, {u}) open cover {u} u. functor acts object p as, p 7 v,{u}(p ) ob descv (c, {u|v }) 34 shall describe acts morphisms. let p1, p2 ob c(u). words, p1 ob descu (c, {u 1 p2 ob descu (c, {u 2 }) }) open covers {u 1 }, {u 2 } u. recall hom(p1, p2) = {u 3 } hom( 13p1, 23p2)/ let hom( 13p1, 23p2) renement {u 3 } {u 1 } {u 2 }. dene () as, () = 23,v 1 v,23 v,{u 3 }() v,13 1 13,v () homdescv (c,{u 3 |v })(cid:16) v,13 v,{u 1 }(p1), v,23 v,{u 2 }(p2)(cid:17) straightforward check functor well-dened example, implies () (). let v : v u w : w v inclusions open sets. easy check natural transformations dened previous subsection give set invertible natural transformations v w : (v w ) v restriction functors acting direct limit categories. moreover, natural transformations make analogues diagram (1) commute. (note chosen denote natural transformations instead , keeping general tendency denote sheaed objects tilde.) w given c structure presheaf categories associated categories (direct limits descent categories) open set, given restriction functors appropriate natural transformations. furthermore, shown c sheaf categories, presheaf. note c sheaf categories, presheaf, c equivalent c stack. words, sheafy sheaf categories, recover original sheaf. 4.1.4 lifts cartesian functors suppose : c cartesian functor presheaves categories c, space x. section shall show lifts cartesian functor : c sheacations c d. 35 let u open set, {u} open cover u. shall rst dene functor (u, {u}) : descu (c, {u}) descu (d, {u}) shall dene functor (u, {u}) objects follows. let {(x), ()} ob descu (c, {u}). dene action (u, {u}) by, x 7 (u)(x) 7 1 , (u)() , homd(u)(cid:16)(u)(x)|u , (u)(x)|u(cid:17) natural transformations appearing denition cartesian functor. straightforward check action well-dened, i.e., images make analogue diagram (3) commute. shall dene functor (u, {u}) morphisms. given objects {(x), ()}, {(y), ( )} descu (c, {u}) morphism {f : x y} : {(x), ()} {(y), ( )} two objects, dene action (u, {u}) morphism as, f 7 (u)(f) straightforward check map well-dened, moreover (u, {u}) : descu (c, {u}) descu (d, {u}) well-dened functor. passing, note : e another cartesian functor presheaves categories d, e x, relation ()(u, {u}) = (u, {u}) (u, {u}) now, let {u 2 } {u 1 } renement {u 1 }, open covers open set u, let } set inclusions. shall dene invertible natural transformation : {u 2 : }) c (u, {u 1 }) = (u, {u 2 dene natural transformation follows. object {(x), ()} ob descu (c, {u 1 }) 36 natural transformation associates morphism n (i),i(x(i)) : (u 1 (i))(x(i))|u 2 (u 2 )(x(i)|u 2 ) natural transformations dening cartesian functor. straight- forward check well-dened morphism, moreover denes natural transformation, commutes morphisms {(x), ()} {(y), ()} objects descu (c, {u 1 }). 1 : {u 2 } two sets inclusions renements open covers u, following diagram (closely analogous diagram (5)) commutes: } 2 : {u 3 } {u 1 } {u 2 1d (u, {u 1 2d 12 (12) (u, {u 1 }) }) 1= 2d (u, {u 2 }) 1c 12= 2= (u, {u 3 2c 1c }) c }) (12) c 12 (u, {u 3 (19) natural transformations dened section descent categories. nally ready start dening cartesian functor : c d. let u x open set, dene functor (u) : c(u) d(u) follows. let p object c(u), is, p ob descu (c, {u 1 }) open cover {u 1 } u. dene (u)(p ) (u, {u 1 })(p ) ob descu (d, {u 1 }) ob d(u) let p1 p2 objects c(u), meaning pi ob descu (c, {u }) open covers {u renement {u 3 } u, {1, 2}. let hom c(u )(p1, p2), means } {u 1 } {u 2 }, homdesc(c,{u 3 }) ( 13p1, 23p2) dene (u)() 1 23 (u, {u 3 homdesc(d,{u 3 })() 13 })(cid:16) 13(u, {u 1 })(p1), 23(u, {u 2 })(p2)(cid:17) denitions above, shown (u) : c(u) d(u) 37 well-dened functor categories c(u) d(u). order dene cartesian functor : c d, need specify functors (u). specically, inclusion : v u, need specify invertible natural transformation : (u) = (v ) c satisfying certain identities. natural transformation dened follows. object {(x), ()} ob descu (c, {u}) c(u) (dened respect open cover {u} u) natural transformation assigns following morphism: ({(x), ()}) { u,uv (x) : (u)(x)|uv (u v )(x|uv ) } invertible natural transformations dening cartesian functor. straightforward check denition given fact yield well-dened natural transformation. moreover, satises usual pentagonal identity (5). specically, 1 : v u 2 : w v inclusions open sets, following diagram commutes: 2 1 (u) 12 1= 2 (v ) 1 c (12) (u) 12= 2= (w ) c 12 2 c 1 c (w ) (12) c (20) natural transformations dened previous subsection. thus, dened cartesian functor : c d. put another way, given cartesian functor : c two presheaves categories c, d, constructed lift cartesian functor sheacations c d. passing, shall mention straightforward check : e another cartesian functor presheaves categories d, e, lift compatible composition words, g( ) = 4.1.5 lifts 2-arrows section, shall demonstrate 2-arrows also lifted sheacations. let 1, 2 : c pair cartesian functors presheaves categories c, d, let : 1 2 2-arrow. shall dene lift : 1 2 2-arrow 2-arrow sheacations cartesian functors. 38 first, open set u open cover {u} u, shall dene natural transformation (u, {u}) : 1(u, {u}) = 2(u, {u}) functors descu (c, {u}) descu (d, {u}), follows. let {(x), ()} object descu (c, {u}). dene morphism (u, {u}) ({(x), ()}) : 1(u, {u}) ({(x), ()}) 2(u, {u}) ({(x), ()}) by, (u, {u}) ({(x), ()}) { (u)(x) : 1(u)(x) 2(u)(x) } easy check well-dened morphism category descu (d, {u}), moreover denes natural transformation 1(u, {u}) 2(u, {u}). mention {u 1 } : {u 2 } {u 1 } {u 2 } open covers u, {u 2 } } set inclusion maps, following renement {u 1 diagram commutes: 1(u, {u 1 }) (u,{u 1 }) 2(u, {u 1 }) 12= 1(u, {u 2 12= 2(u, {u 2 }) (u,{u 2 }) }) (21) natural transformation dened earlier, relating (u, {u}) dened re- spect distinct open covers. now, shall dene 2-arrow : 1 2, lifting sheacations. open set u, let p ob c(u), is, p ob descu (c, {u}) open cover {u} u. dene morphism (u)(p ) : 1(u)(p ) 2(u)(p ) by, (u)(p ) (u, {u})(p ) straightforward check (u) natural transformation open u, moreover satises usual compatibility relation, 2-arrow. passing, shall mention easy check 3 : c another cartesian functor presheaves categories c, d, 1 : 1 2 2 : 2 3 pair 2-arrows cartesian functors, sheacation compatible composition: g(2 1) = f2 f1 4.2 pullbacks stacks section shall dene pullbacks stacks associated technology. shall begin dening pullbacks stacks themselves, go describe pullbacks cartesian 39 functors, analogues natural transformations composed pullbacks stacks, more. 4.2.1 pullbacks stacks let f : x continuous map, let c presheaf categories . subsection shall describe construct stack f c x. warn reader section extremely technical; reader probably skip subsection rst reading. describe construction pullbacks stacks, shall take moment review denition pullbacks sheaves sets, closely analogous (and much simpler technically). f sheaf sets space f : x continuous map, dene presheaf sets f 1f direct limit f 1f (u) = lim f (v ) v f (u ) open subsets v containing f (u), open set u. restriction maps dened straightforward manner. recover sheaf, sheafy f 1f . shall follow closely analogous procedure dening pullbacks stacks. order construct stack f c, shall rst construct presheaf categories shall denote f 1c. constructed presheaf f 1c x, shall sheafy f 1c recover sheaf categories shall denote f c. construction give f 1c work c presheaf categories, necessarily stack. readers following  note usage notation f f 1 diers slightly reference. order dene f 1c presheaf categories c , one rst describe construct categories f c(u) associated open set u x, build restriction functors invertible natural transformations. open set u x, category f 1c(u) dened direct limit f 1c(u) = lim f (u )v c(v ) direct limit open sets v f (u) v . shall describe precisely one denes direct limit categories. shall closely follow prescription . 40 take objects f 1c(u), disjoint union objects categories c(v ). words, ob lim f (u )v c(v ) = ob c(v ) remains dene set morphisms category f 1c(u). let p1 ob c(v1), p2 ob c(v2). diagram (22) w open set containing f (u), dene sw set morphisms : 1p1 2p2 c(w ). now, dene equivalence relation disjoint union `w sw follows: diagram (22) similar diagram v1 1 w 2 v2 1 w 2 v2 v1 (w open, f (u) w ) say morphism : : 2 p2 exists diagram 1 p1 1p1 2p2 equivalent morphism z w w (z open, f (u) z) 1. = {1, 2}, 2. commutative diagram (1)p1 ,1(p1) 1p1 ,1(p1) 1 p1 () 2 p2 ,2(p2) (2)p2 () 2p2 ,2(p2) (23) natural transformations appearing denition c presheaf categories. set morphisms hom(p1, p2) category f 1c(u) dened disjoint union `w sw , modulo equivalence relation described above. far dened objects morphisms direct limit category f 1c(u). shall take moment describe composition morphisms, correct denition might obvious reader. let p1, p2, p3 ob (f 1c)(u), i.e., pi ob c(vi) open sets vi f (u). let homf 1c(u )(p1, p2), homf 1c(u )(p2, p3). words, exists open sets v, v, f (u) v v1 v2 f (u) v v2 v3, homc(v )(p1|v , p2|v ) homc(v)(p2|v, p3|v) 41 dene follows. let v open set f (u) v v v. then, dene 1 vv |v vv 1 v v |v v v homc(v ) (p1|v , p3|v ) shown denition well-dened, i.e., , . far described categories f 1c(u) associated open set u x. order dene f 1c presheaf categories, still need dene restriction functors appropriate natural transformations. describe restriction functors, however, shall take moment reect meaning denition categories f 1c(u) given above. consider, example, special case identity map id : x x. shown id1c(u) equivalent (as category) c(u). naively, reader might nd result quite surprising direct limit dening id1c(u) contains objects c(u). however, although contains objects, also isomorphisms, fact number isomorphism classes objects categories same. example, p1, p2 ob id1c(u) two objects, shown p1 isomorphic p2 p1|u isomorphic p2|u . shall work details proving equivalent categories, though shall take moment outline general idea. dene functor f : c(u) id1c(u) by, f maps object p 7 p , f maps morphism 7 . dene functor g : idc(u) c(u) follows. g dened map object p 7 p |u . suppose p1 ob c(v1) p2 ob c(v2) open sets v1, v2 u v1 v2 words, let p1 p2 objects category id1c(u). let homc(v ) (p1|v , p2|v ) open set v , u v v1 v2, i.e., homid 1c(u )(p1, p2). dene g() = 1 u v |u u v . shown g well-dened functor (meaning, example, implies g() = g()), f g inverses one another, sense exist invertible natural transformations f g idid 1c(u ) g f idc(u ). fact, generally shown f : x open map (meaning, image open set open), open u x, category f 1c(u) equivalent category c(f (u)). given intuition meaning direct limits used above, shall describe restriction functors natural transformations needed describe f 1c presheaf categories. given categories f 1c(u), shall dene pullback functors : f 1c(u1) f 1c(u2) : u2 u1. fact, restriction functors straightforward dene. 42 note induces map { v | f (u1) v } { v | f (u2) v } given v 7 v (any open set containing f (u1), also contains f (u2)). dene act objects p f 1c(u1) as, p 7 p , morphisms as, 7 . clear map yields well-dened12 functor f 1c(u1) f 1c(u2). clear invertible natural transformations (12) 1 needed dene presheaf categories trivial. words, p ob f 1c(u), meaning p ob c(v ) open v f (u), functors (12) 1, pair composable inclusions 1, 2, map p 7 p , morphism requisite natural transformation assign p given identity morphism. 2 2 far dened presheaf categories f 1c. even c sheaf, presheaf f 1c is, general, sheaf. order get sheaf presheaf f 1c, must sheafy presheaf. shall denote result sheacation f c. illuminating example, consider idc, id : x x identity map c stack. pointed earlier category idc(u) equivalent category c(u), open set u. clear idc equivalent c stack. f homeomorphism, example, c stack, f 1c already stack, presheaf categories. stronger statements made, need later use. 4.2.2 pullbacks cartesian functors let f : x continuous map, let : c cartesian functor presheaves categories c, . shall construct cartesian functor f : f c f rst constructing cartesian functor f 1 : f 1c f 1d presheaf pullbacks f 1c, f 1d x, using fact cartesian functor presheaves categories lifts cartesian functor sheacations. shall rst dene functors 12for example, , clear () (). f 1(u) : f 1c(u) f 1d(u) 43 u x open set. dene f 1(u) objects follows. recall ob f 1c(u) = f (u )v ob c(v ) p ob f 1c(u) means, p ob c(v ) open v f (u). dene action f 1(u) p as, p 7 (v )(p ) ob d(v ) ob f 1d(u) shall dene f 1(u) morphisms. let p1, p2 ob f 1c(u), meaning, pi ob c(vi) open vi f (u) {1, 2}. let homf 1c(u )(p1, p2). words, exists open v, f (u) v v1 v2, homc(v )(p1|v , p2|v ). dene f 1(u) as, 7 1 v v2(p2) (v)() v v1(p1) homd(v) (cid:16)(v1)(p1)|v , (v2)(p2)|v(cid:17) invertible natural transformation appearing denition : c cartesian functor. straightforward check f 1(u), given above, yields well-dened functor f 1c(u) f 1d(u). order create cartesian functor f 1, remains specify invertible natural transformations f 1 : f 1d f 1(u1) = f 1(u2) f 1c inclusions : u2 u1. fact, requisite natural transformations trivial. let p ob f 1c(u1), meaning p ob c(v ) open v f (u1). first, note p |u2 given p ob c(v ), denition restriction functor pullbacks. moreover, f 1(u1)(p )|u2 = f 1(u2)(p |u2) = (v )(p ) ob d(v ) ob f 1d(u2) clearly, morphism natural transformation f 1 assigns object p identity morphism (v )(p ). yields well-dened natural transformation, satisfying usual pentagonal identity. thus, dened cartesian functor f 1 : f 1c f 1d. dened cartesian functor presheaves f 1c f 1d, use fact cartesian functors presheaves lift cartesian functors sheacations immediately recover cartesian functor f : f : f c f 44 passing, shall mention another cartesian functor : e presheaves categories x, straightforward check pullbacks cartesian functors compatible composition cartesian functors. words, f 1( ) = f 1 f 1 so, using analogous result sheacations, nd f ( ) = f f 4.2.3 pullbacks 2-arrows let f : x continuous map, let 1, 2 : c cartesian functors presheaves categories c, d. let : 1 2 2-arrow cartesian functors. section shall construct 2-arrow rst constructing 2-arrow f : f 1 = f 2 f 1 : f 11 = f 12 pullbacks f 11, f 12, using fact 2-arrow lifts 2-arrow sheacations. shall construct f 1 follows. let u x open set, let p ob f 1c(u), is, p ob c(v ) open v f (u). dene morphism (f 1)(u)(p ) : (f 11)(u)(p ) (f 12)(u)(p ) by, (f 1)(u)(p ) (v )(p ) : 1(v )(p ) 2(v )(p ) easy check denes natural transformation (f 1)(u) : (f 11)(u) = (f 12)(u) moreover, inclusion : u2 u1 open subsets x, natural transfor- mations compatible natural transformations f 1 dening f 11 f 12 cartesian functors. thus, dened 2-arrow f 1 : f 11 f 12. dened 2-arrow cartesian functors f 11 f 12, use fact 2-arrows lift 2-arrows sheacations immediately recover 2-arrow f : f : f 1 = f 2 45 passing, shall mention another cartesian functor 3 : c pair 2-arrows 1 : 1 2, 2 : 2 3, pullback compatible composition. words, f 1(2 1) = (f 12) (f 11) using analogous result sheacations, nd f (2 1) = (f 2) (f 1) 4.2.4 analogues natural transformations section shall dene analogue natural transformation compositions pullbacks. precisely, let f : x g : z continuous maps topological spaces. stack c z, shall dene cartesian functor properties c gf : (gf )c f gc 1. cartesian functor : c stacks z, following diagram commutes: (gf )c gf c f gc (gf ) (gf )d f g f gd gf (24) 2. f : x , g : z, h : z w three continuous maps, stack c w commuting diagram (hgf )c h,gf ((gf ) h) c hg,f (f (hg)) c h,g g,f (f g h) c (25) reader immediately recognize analogous diagram (1). moreover, cartesian functor gf : (gf )c f gc invertible, sense exists cartesian functor 1 gf : f gc (gf )c invertible 2-arrows 1 id 1 id. order dene , shall work level presheaves categories dene cartesian functor gf : (gf )1c f 1g1c 46 furthermore, shall implicitly assume map f open (i.e., images open sets open), g g1c stack, presheaf categories. restrictions could almost certainly weakened; however, paper shall interested cases f g homeomorphisms, shall investigate conditions further. dene cartesian functor gf : (gf )1c f 1g1c, shall rst dene functors gf (u) : (gf )1c(u) f 1g1c(u) open sets u x. dene functor gf (u) objects follows. let p object (gf )1c(u), say, p ob c(v ) open v (gf )(u). functor gf (u) acts p 7 gf (u)(p ) p ob c(v ) v (gf )(u ) v g(v ) ob c(v ) = ob f 1g1c(u) v f (u ) dene functor gf (u) morphisms follows. let p1, p2 objects (gf )1c(u), say, pi ob c(vi) open vi (gf )(u), {1, 2}. let hom(gf )1c(u )(p1, p2), means open v, (gf )(u) v v1 v2, homc(v)(p1|v , p2|v ). functor gf (u) acts as, 7 gf (u)() terms equivalence classes, denoted brackets , functor gf (u) maps gf g]f . order dene cartesian functor gf : (gf )1c f 1g1c, must specify invertible natural transformation gf : f 1g1 gf (u) = gf (v ) (gf )1 every inclusion : v u. dene natural transformation trivial one. words, given object p (gf )1c(u), say, p ob c(v ) open v (gf )(u), dene gf (p ) = idc(v )(p ). assignment morphisms objects clearly denes natural transformation, moreover easy see satises pentagonal identity natural transformations cartesian functors. thus, dened cartesian functor gf : (gf )1c f 1g1c. straight- forward check denition satises two properties listed beginning section, moreover cartesian functor admits inverse cartesian functor 47 gf , composite functors 1 1 identied identity 1 functors, invertible 2-arrows. finally, lift cartesian functor cartesian functor sheacations satisfying properties listed beginning section. gf : (gf )c f gc 4.3 stalks stacks presheaf sets f space x, recall one dene stalk sheaf f point x x direct limit open sets u x containing point x x. fx lim u x f (u) perform analogous construction presheaves categories. dene stalk presheaf categories c point x x direct limit cx lim u x c(u) open sets u x containing point x x. direct limit dened precise analogy direct limits dened previous two sections. note stalk presheaf sets set, stalk presheaf categories category. notion stalk may give reader degree intuition stacks. furthermore, one ought able work many stack-variants concepts ordinary sheaves. shall use stalks presheaves categories paper, stack-theoretic versions sheaf theory concepts, shall speak matters further. 5 technical notes gerbes section shall make highly technical remarks gerbes. particular, discussing pullbacks gerbes dening torsors, shall speak detail gauge transformations gerbes, use ideas derive basic facts gerbes mentioned earlier paper. many basic ideas taken . readers studying paper rst time urged skip section. 48 5.1 pullbacks gerbes let f : x continuous map, c gerbe band a. easy check f c gerbe x, band f . moreover, element sheaf cohomology group h 2(x, f a) characterizing f c precisely pullback element sheaf cohomology group h 2(y, a) characterizing c , reader might guessed. c connective structure, (at least f dieomorphism) one naturally obtains connective structure f c. let co denote connective structure c, meaning co cartesian functor co : c torsy (1) compatible bands either gerbe. cartesian functor lifted cartesian functor f co : f c f torsy (1) least special case f dieomorphism (the case shall need), f torsy (1) = torsx (1). thus, least f dieomorphism nd connective structure c naturally denes connective structure f c. let k denote curving (c, co). least case f dieomorphism, pullback k curving f k (f c, f co). shall outline details here. since f assumed dieomorphism, know f c = f 1c, suces dene f k level f 1c f 1co. let u x open, let p ob (f 1c)(u), i.e., p ob c(v ) open v f (u). recall denition, (f 1co)(u)(p ) = co(v )(p ) let section (f 1co)(u)(p ), say, section co(v )(p ). nally ready dene f k. dene (f k)() (f |u )  straightforward check denition satises dening axioms curving. summarize, exist natural notions pullback gerbes connections gerbes. 5.2 torsors mathematical descriptions gerbes rely heavily torsors. part, strenuously avoided speaking torsors text, times use unavoidable. 49 section shall dene torsors. discussion largely follow  {$9909108$}. torsor respect group g set action g free transitive. example g-torsor topological group g group g (though described torsor, one implicitly drops group structure). let c (g) denote group smooth maps manifold x lie group g, example c (g)-torsor principal g-bundle. (some authors abuse notation refer principal g-bundle g-torsor, rather c (g)-torsor; shall specically avoid mangled usage.) let 1(x) denote abelian group consisting 1-forms manifold x, example 1(x)-torsor space connections principal u(1)-bundle. (any two connections dier 1-form, seen follows: let denote two locally-dened connections bundle respect good open cover {u}. = = ln g overlaps, particular globally-dened 1-form.) torsors use paper torsors respect sheaf abelian groups, group. torsor respect sheaf groups (say, a) sheaf sets, say, f , set f (u) associated open set u torsor respect group a(u), action commutes restriction maps. morphism a-torsors : f g morphism sheaves sets, action commutes . example torsor respect sheaf13 = c (g) c maps g sheaf local sections smooth principal g-bundle. set isomorphism classes a-torsors (abelian) group structure. let f , g pair a-torsors. product sheaves f g (a a)-torsor. dene a-torsor f g (the result group operation) sheaf associated presheaf (f g) acts via product map a. given a-torsor f , natural denition f 1. specically, a-torsor f 1 dened property open u x, set f 1(u) set torsor isomorphisms f (u) a(u). shown group isomorphism classes a-torsors, space x, natural bijection group h 1(x, a). 13note notation slightly ambiguous: use c(g) denote group smooth maps g, sheaf smooth local maps g. correct interpretation clear context. 50 clear morphism a-torsors, space, necessarily isomorphism. generalization similar result principal g-bundles , namely morphism principal g-bundles xed g base space necessarily isomorphism. also mention technical lemma shall use follows. let i, k pair a-torsors space x, sheaf abelian groups a. shall show order dene isomorphism k a-torsors i, k, suces show set local sections {s} i, dened respect open cover {u} x, mapped. dene isomorphism elements sets i(u), k(u), use action group a(u) words, element i(u) dier element group a(u), dene image image modulo group element, thus explicitly recovering isomorphism sets which, construction, commutes action a(u). construct maps i(w ) k(w ) w u u using restriction obvious way, construct maps w u performing possible gluings elements {i(u)}. information torsors found in, example, {$9909108$}, , . 5.3 gauge transformations gerbes maps x g dene gauge transformations principal g-bundles space x, see explicitly section (equivalence classes of) bundles dene gauge transfor- mations gerbes band c (g). fully explain ideas take time. much material present subsections 5.3.1 5.3.5 taken . 5.3.1 gauge transformations objects let c denote gerbe manifold x, band a. shall assume = c (g) abelian lie group g, simplicity. let u x open subset space x, let principal g-bundle u. strictly speaking, take a|u -torsor, principal g-bundle; however, possible, trying avoid language torsors. given object p ob c(u), shall show use construct another object shall denote p ob c(u). let {u} good open cover u, i(u) 6= . let {s i(u)} set local sections i, open subsets u. dene g (unique) element a(u) transports s|u s|u . (recall strictly speaking, interpret torsor, natural group law {s} 51 per se.) dene object p i, using gluing law objects, follows. dene set isomorphisms by, : p |u |u p |u|u , g 1 , straightforward check satisfy axioms gluing law objects, said gluing law recover new object c(u) shall denote p i. passing, mention minor technical problem description above, namely object p almost, quite, uniquely specied set local sections i. recall gluing law objects yields objects unique unique isomorphism commuting gluing maps . thus, object p uniquely dened however, exists unique isomorphism (commuting gluing maps ) two objects one might label p i. thus, order uniquely specify action torsor together set local sections objects, must choose specic examples p object p . next subsection shall derive functor describing action torsor i, straightforward check two functors diering choices made objects p i, isomorphisms choices dene 2-arrow functors. shall speak issue, except absolutely necessary. dening action torsor objects p , referred specic choice set local sections i. happens choose distinct set local sections i? answer two sets local sections dene isomorphic objects p i. shall outline proven special case two sets local sections question dened respect open cover {u}. (it straightforward check result also holds local sections dened respect distinct open covers, details cumbersome.) let u x open set, a|u -torsor, {s}, {s } two sets local sections i, dened open cover {u} u. let p (p i) denote two objects obtained gluing via local sections {s}, {s }, let (p ) : (p i)|u p |u (p ) : (p i)|u p |u denote corresponding isomorphisms. dene f : (p i)|u (p i)|u by, f ( (p ))1 (s s) (p ) s) denote element band mapping 7 used (s . straightforward check {f} satisfy gluing axiom morphisms, exists (unique) morphism p (p i). thus, distinct local sections dene isomorphic objects p i. 52 5.3.2 induced equivalences categories a|u -torsor induces map objects category c(u), also induces self-equivalence category c(u), shall explain. shall denote proposed functor i(u). explained action i(u) objects, namely p 7 p i, previous subsection. dene action i(u) morphisms follows. let p1, p2 objects c(u), let homc(u )(p1, p2). let (pi) denote isomorphisms (pi) : (pi i)|u pi|u (i {1, 2}) constructed time pi i, gluing law objects, {u} open cover u. dene morphisms ( i)|u : (p1 i)|u (p2 i)|u ( i)|u ((p2))1 |u (p1) one use gluing law morphisms glue together ( i)|u form (unique) morphism : p1 p2 i. straightforward check map dened, namely i(u) : 7 i, completes denition functor i(u) : c(u) c(u). passing, note maps dened above, dene natural transformation ic(u) idc(u), : u u inclusion. easy check exist invertible natural transformations 1(u) i(u) = idc(u ) i(u) 1(u) = idc(u ) 1(u) functors associated dual torsors, functor i(u) denes self-equivalence category c(u). far shown a|u -torsor (together specic choice local sections i) denes equivalence categories i(u) : c(u) c(u). shall use dene cartesian functor. let a-torsor, let {u} good open cover x, let {s} set local sections i, dened respect {u}. already demonstrated dene family functors i(u) : c(u) c(u), dened a|u -torsor i|u local sections {s|u } i|u , dened respect open cover {u u} u. order 53 dene cartesian functor : c c, remains dene invertible natural transformations : i(u) i(v ) inclusion : v u, obeying usual constraint. let : u2 u1 inclusion open sets, let p ob c(u1). let 1 2 (p ) : (p ) : (p i|u1)|u1u ( = i(u1)(p )|u1u ) p |u1u (p |u2 i|u2)|u2u ( = i(u2)(p |u2)|u2u ) p |u2|u2u isomorphisms appearing gluing law objects. dene f : i(u1)(p )|u2|u2u i(u2)(p |u2)|u2u by, f (2 (p ))1 2,2 1 1,2 1 (p )|u2u 1,2 1 2,2 natural transformations dening c presheaf categories, implicitly used notation ui = ui u (i {1, 2}). straightforward check f satisfy gluing axiom morphisms, exists unique morphism (p ) : i(u1)(p )|u2 i(u2)(p |u2) (p )|u2u = f. moreover, straightforward check dene natural transformation i(u1) i(u2) , moreover set natural transformations makes diagram (5) commute. thus, dened natural transformations needed describe : c c cartesian functor. moreover, clear denes map gerbes, i.e., commutes action band. cartesian functor : c c dened depends explicitly upon choice local sections {s} i, respect open cover {u} x. two cartesian functors dened distinct choices local sections a-torsor dier? straightforward check two cartesian functors : c c dier 2-arrow. words, two cartesian functors c c, associated a-torsor diering choice local sections, exists invertible 2-arrow : . natural transformations open set u dened morphisms p (p i) dened earlier section 5.3.1, studying issue context gauge transformations individual objects. } dened open cover {u 1 } x. let {u 2 also mention interesting special case matter above. let 1 c denote automorphism gerbe c, associated a-torsor dened local sections {s1 }, consider automorphism 2 } i, dened respect cover {u 2 }. straightforward check that, special case, distinction 1 c 2 c identical ambiguity dening ic objects, xed choices local sections. thus, judicious choices denition 1 c functor 2 c. c dened local sections {s2 } renement {u 1 c, 1 s1 (i)|u 2 54 c 2 suppose 1 2 pair a-torsors. let 1 c corresponding automor- phisms gerbe c. shall show (under correct circumstances) gerbe automorphism (i 1 2)c identical automorphism 1 c . assume (without loss generality) local sections dening 1 c dened respect open cover {u} x (if not, restrict mutual renement); let {s1 } denote local sections 1, 2, respectively, dening 1 c. straightforward check (with usual judicious choices) gerbe automorphism (i 1 2)c dened respect local sections14 {s1 c 2 c, i.e., } torsor 1 2 identical composition 1 (cid:16) 1 2(cid:17)c } {s2 a(u) s2 = 1 c 2 c c 2 c 2 c 2 suppose 1 2 pair a-torsors. shall show torsor isomorphism : 1 2 equivalent 2-arrow : 1 c. first, shall dene notation. assume {s1 c, 2 c, assumed both15 dened open cover {u} x. assume rst given : 1 2; shall describe construct : 1 c. let u open set, denote natural transformations associated 1 c , 2 } local sections 1, 2 dening gerbe automorphisms 1 c 2 c , i.e., } {s2 c 2 (p ) : c(u)(p )|u u p |u u p ob c(u), {1, 2}. dene (u)(p ) : 1 c(u)(p )|u u 2 c(u)(p )|u u by, (u)(p ) (cid:16)2 (p )(cid:17)1 (cid:16)s2 (s1 )(cid:17) 1 (p ) easy check (u)(p ) satisfy gluing axiom morphisms, glued together form unique morphism (u)(p ) : 1 c(u)(p ) 2 c(u)(p ) whose restriction u u given (u)(p ). moreover, straightforward check (u) : 1 c 2-arrow. thus, given torsor isomorphism : 1 2, constructed 2-arrow : 1 c(u) natural transformation, nally : 1 c(u) 2 c 2 c 2 c. conversely, given 2-arrow : 1 c , shall construct torsor isomorphism : 1 2. shall dene describing action local sections {s1 } 1 c. using conventions paragraph above, open u p ob c(u), c 2 14our notation slightly sloppy, a(u) abelian group, ring, i(u) set, module. 15if dened open cover, restrict mutual renement. 55 dene g(u u)(p ) element abelian group a(u u) associated automorphism (p ) (u)(p ) (cid:16)1 2 (p )(cid:17)1 : p |u p |u assume without loss generality16 {u} good cover, category c(u) contains single isomorphism class objects17. then, u = u, band element g(u) dened independent choice p . dene (s1 ) g(u)1 s2 dene torsor isomorphism, suces describe action set local sections associated cover, done. thus, associated torsor isomorphism : 1 2 2-arrow : 1 c. summarize results paragraph last, torsor isomorphism : 1 2 equivalent 2-arrow : 1 c 2 c. c 2 consequence results last paragraph, see isomorphic torsors dene isomorphic gerbe automorphisms. thus, distinct gerbe automorphisms dened equivalence classes torsors, individual torsors per se. fact quite important discussing group cohomology group h 2(, u(1)) appears describing equivariant structures b elds modding group coboundaries ultimately comes fact equivalence classes torsors dene distinct gerbe automorphisms. passing, also speak briey pullbacks, pullback auto- morphism associated torsor related automorphism associated pullback torsor. let f : x continuous map, let c gerbe , band a. let a-torsor, let ic denote associated automorphism c (dened respect local sections {s}, open cover {u} ). let (f i)c denote auto- morphism gerbe f c dened f a-torsor f i, respect open sections {s} f i, open cover {f 1(u)} x. straightforward check that, least case f homeomorphism (so f 1c = f c f 1i = f i), gerbe automorphisms f (ic) (f i)c coincide18. 16if not, restrict suitable renement. 17we shall prove later isomorphism classes objects category c(u ) one-to-one corre- spondence elements h 1(u, a|u ). 18in fact, slightly sloppy. dening action i, recall minor ambiguity denition action objects c. distinct choices dier unique morphisms, assumed choices made, thereafter ignored point. essentially problem arises here. correct statement f (ic) (f i)c dier unique 2-arrow; making judicious choices, assumed coincide. 56 5.3.3 action connections section shall describe gauge transformations gerbes act connective structures curvings. briey touched matters section 3.5; re- examine detail. x notation, let c gerbe connective structure co. let u x open, p ob c(u). let a|u -torsor, let {u} good open cover u, let {s} set local sections i, dened respect {u}. let ic : c|u c|u denote gerbe automorphism corresponding sections {s}. consider action ic p . denition p = ic(u)(p ), morphisms (p ) : (p i)|u following diagram commutes: (p i)|u |u (p )|u p |u|u , (p i)|u , , p |u ss p |u , (p i)|u|u (p )|u p |u|u natural transformations dening c presheaf categories, ss denotes band element mapping s. applying cartesian functor co, (with bit work) recover following commutative diagram: co(p i)|u |u , co(p i)|u , co(p i)|u|u co(p )|u |u , co(p )|u ln (ss) co(p )|u , co(p )|u|u (26) abbreviated co(u)(p ) co(p ), example, map co(u)(p i)|u|u co(u)(p )|u|u given composition ()1 ()1 co(u)((p )|u) natural transformations dening co cartesian functor. diagram (26), clear co(u)(p i) co(u)(p ) dier 1|u -torsor connections i. moreover, precise specication particular section (u, co(u)(p )) mapped determined local sections {s} determining ic, equivalent choice connection i. (compare, example, .) 57 words, let {a} family 1-forms {u} dening connection i. assume action ic sections co(u)(p ) determined {a}. (u, co(u)(p |u), 7 + action ic. phrased simply still, gauge transformation gerbe connective structure (after all, 2-arrow be- dened equivalence class bundles connection. tween gerbe automorphisms lifts connection-preserving map connective structures, noted earlier.) ic act curving k (c, co)? answer immediately clear denition curving: k( + a) = k() + da much earlier paper remarked automorphism gerbe connection dened equivalence class bundles connection. here, see explicitly. connection at, curving k invariant gauge transformation. put another way, constant gauge transformations dene bundle au- tomorphisms preserve connection, gauge transformation gerbe preserves connection equivalence class bundles connection. 5.3.4 gauge transformations commute gerbe maps let f : c map gerbes c, d, is, cartesian functor commuting action band. assume c band a, dened space x. section, shall show a-torsor, exists invertible 2-arrow ic : c c id : gerbe maps induced a-torsor i. : f ic = id f fact, quite straightforward. without loss generality19, assume local sections dening ic id identical. let {u} good open cover x, let {s} local sections {u} dene ic id. let c ic(u)(p )|u u p |u u (p ) : (p ) : id(u)(p )|u u p |u u p ob c(u) p ob d(u) (for open u x) denote isomorphisms obtained denition gauge transforma- tion. dene (u)(p ) : (f ic)(u)(p )|u u (id f )(u)(p )|u u 19as gerbe automorphisms dened distinct choices local sections dier invertible 2-arrow, clearly free choose convenient sets local sections without changing result. 58 open u x p ob c(u) by, (u)(p ) (f (u)(p ))1 (cid:16)f (cid:17)1 f (u u)(cid:16)c (p )(cid:17) f f natural transformations dening f cartesian functor. straightforward check (u)(p ) satisfy gluing axiom morphisms, glued together form unique morphism (u)(p ) : (f ic)(u)(p ) (id f )(u)(p ) (u)(p )|u u = (u)(p ). straightforward check (u) denes natural transformation (f ic)(u) (id f )(u), moreover denes invertible 2-arrow f ic id f . thus, loosely speaking, gauge transformations commute gerbe maps. 5.3.5 sheaves morphisms torsors p1 p2 two objects c(u), sheaf (iso)morphisms homu (p1, p2) = aut(p1) acts left, clear a|u -torsor20. particular, a|u action free transitive open v u, set hom(p1|v , p2|v ) either empty (and trivially a(v )-torsor), nonempty manifestly torsor group a(v ). thus, sheaf abelian groups, a|u acts freely transitively sheaf homu (p1, p2), moreover action commutes restriction maps, homu (p1, p2) a|u -torsor. one easily check f : c map gerbes band space x, open u two objects pa, pb ob c(u), induced map homu (pa, pb) homu (f (u)(pa), f (u)(pb)) morphism torsors. morphism a-torsors isomorphism, means a-torsors homu (pa, pb) homu (f (u)(pa), f (u)(pb)) isomorphic. straightforward check torsor homu (p1, p2) induces gauge trans- formation c(u) maps object p1 object p2, reader probably guessed. moreover, straightforward see homu (p, p i) = a|u -torsors, a|u -torsor i. let {u} good open cover u, let {s i(u)} set local 20those readers also studying  note reference, hom(p1, p2) instead denoted isom(p1, p2). 59 sections dening map p 7 p i. recall constructed p using gluing law objects, gluing law also yields set isomorphisms (p ) : (p i)|u p |u dene isomorphism a|u -torsors specifying sections {s} map isomorphisms {1 }. mentioned section torsors, dene isomorphism two torsors, suces describe set local sections (dened respect open cover) mapped, thus dened isomorphism homu (p, p i) a|u -torsors. one implication fact homu (p, p i) = action free equivalence classes objects c(u): p isomorphic p trivializable, i.e., global section exist morphism p p i, restrictions open subsets. moreover, action torsors objects free, transitive: two objects p1, p2 ob c(u) related set local sections a|u -torsor homu (p1, p2). thus, set equivalence classes objects c(u) torsor action abelian group h 1(u, a|u ). means exists (noncanonical) one-to-one correspondence equiv- alence classes objects c(u) equivalence classes a|u -torsors. case = c (g) abelian g, rephrase saying equivalence classes objects c(u), gerbe c band a, one-to-one correspondence equivalence classes principal g-bundles u. implies gerbes band = c (g) look locally like trivial gerbe tors(g), bundles look locally like trivial bundle. last result gives great deal insight gerbes, worth repeating. bundles locally trivialized, gerbes locally trivialized. gerbes band = c (g) abelian g locally isomorphic stack principal g-bundles, trivial gerbe. shall conclude section explicitly demonstrating local trivializations. local trivializations needed dene sheaf however, used give insight local structure, shall work explicitly. precisely, open set u c(u) 6= , shall construct functors f (u) : f (u) : tors(a)(u) c tors(a)(u) c(u) exist invertible natural transformations f (u) f (u) id f (u) f (u) id. 60 fix object p0 ob c(u), torsor i0 ob tors(a)(u). dene functor f (u) follows. let p ob c(u) object, dene a|u -torsor dene homu (p0, p ) f (u)(p ) i0 next, let pa, pb ob c(u) objects, : pa pb morphism. dene a|u - torsors homu (p0, pa) b homu (p0, pb) morphism induces morphism torsors # : b dene f (u)() # : i0 b i0 denitions, f (u) well-dened functor c(u) tors(a)(u). next, shall dene functor f (u). let a|u -torsor ob tors(a)(u), dene 0 (cid:17)c f (u)(i) (cid:16)i 1 (u)(p0) next, let a, b a|u -torsors ob tors(a)(u), let : b morphism a|u -torsors. morphism denes 2-arrow dene : (cid:16)i 1 0 (cid:17)c = (cid:16)i b 1 0 (cid:17)c f (u)() (u)(p0) denitions, f (u) well-dened functor tors(a)(u) c(u). finally, straightforward check exist invertible natural transformations f (u) f (u) = idc(u ) f (u) f (u) = idtors(a)(u ) thus, nished demonstrating explicitly u c(u) 6= , category c(u) equivalent category tors(a)(u). 61 5.3.6 sheaves natural transformations torsors shall show sheaves natural transformations a-torsors. specically, let f, g : c pair cartesian functors dening maps gerbes, gerbes c d, assumed band dened space x. shall show sheaf local 2-arrows 2ru (f, g) a|u -torsor, open u x. shall also derive useful properties torsors. shall argue sheaf sets 2ru (f, g) a|u -torsor. dene action a|u follows. let v u open, let g a(v ). let element set 2ru (f, g)(v ), say, collection natural transformations f (w ) g(w ), one open w v . element g a(v ) acts natural transformation (w ) as, (w ) 7 (w ) ( w g) restriction map sheaf a, p ob c(w ), g interpreted element aut(f (w )(p )). easy see action free, commutes restriction map. check transitive requires work, shall outline here. let a, b two elements set 2ru (f, g)(v ). p ob c(v ), b(v )(p )1 a(v )(p ) automorphism f (v )(p ), identify element g(p ) a(v ). two objects p1, p2 related morphism clearly dene isomorphic group elements: g(p1) = g(p2). generally, one show g(p1) = g(p2) even p1, p2 related morphism, restricting open subset w v exists morphism : p1|w p2|w . dene morphism : f (v )(p1)|w f (v )(p2)|w by, (f w )1 f (w )() f w straightforward check (cid:16)b(v )(p2)1 a(v )(p2)(cid:17) |w = (cid:16)b(v )(p1)1 a(v )(p1)(cid:17) |w 1 implies g(p1) = g(p2). thus, pair 2-arrows a, b 2ru (f, g)(v ), exists g a(v ) = b g. means action a|u sheaf sets 2ru (f, g) transitive, nished demonstrating 2ru (f, g) a|u -torsor. shall argue v open subset u categories c(v ) d(v ) contain single isomorphism class objects, set local 2-arrows 2ru (f, g)(v ) nonempty. first, shall construct natural transformations f (v ) g(v ). fix p0 ob c(v ), morphism (v )(p0) : f (v )(p0) g(v )(p0). 62 p ob c(v ), let : p p0 morphism, dene (v )(p ) : f (v )(p ) g(v )(p ) by, (v )(p ) g(v )()1 (v )(p0) f (v )(). straightforward check (v )(p ) independent choice21 , moreover denes natural transformation (v ) : f (v ) g(v ). fact, generate entire a(v )-torsor natural transformations fashion, choosing dierent p0 dierent (v )(p0). passing, note also implies natural transformation f (v ) |v g(v ) |v , example, uniquely determines natural transformation f (v ) g(v ) (assuming that, |v denoting restriction functor associated inclusion v u, c(u) d(u) nonempty). far constructed natural transformation (v ) : f (v ) g(v ); shall show natural transformation denes local 2-arrow f |v g|v , i.e., element 2ru (f, g)(v ). order construct element 2ru (f, g)(v ), need specify (suitably compatible) natural transformations f (w ) g(w ) open w v . (v ) : f (v ) g(v ) open w v , dene (w ) natural transformation generated composition f (w ) f = f (v ) (v ) = g(v ) g = g(w ) : w v inclusion. composition denes natural transformation f (w ) g(w ) , f (w ) g(w ); however using ideas previous paragraph, clear composition used determine natural transformation f (w ) g(w ) (uniquely, fact, every object d(w ) isomorphic restriction object d(v )). moreover, straightforward check collection natural transformations property inclusion open sets : w2 w1, following diagram commutes: f (w1) (w1) = g(w1) f f (w2) (w2) = g(w2) g (27) thus, given natural transformation (v ) : f (v ) g(v ), construct local 2- arrow : f |v g|v . words, constructed element 2ru (f, g)(v ), v u open set c(v ) d(v ) contain single isomorphism class objects, set local 2-arrows 2ru (f, g)(v ) nonempty. shall argue a|u -torsor i, isomorphism 2ru (f, id f ) a|u -torsors. shall dene isomorphism describing distinguished set local sections {s} i, dened respect open cover {u} u, mapped local 21in words, (v )(p ) (v )(p ) denote two isomorphisms dened two morphisms , : p p0, (v )(p ) = (v )(p ). 63 sections 2ru (f, id f ). denote local sections dening gerbe map id : {s}, assume (without loss generality22) dened respect open cover {u} u c(u) d(u) contain single isomorphism class objects, . denition id, exist natural transformations (u) : |u id(u) = |u idd(u) |u denote restriction functors associated inclusion u u. dene new natural transformations natural transformations associated composition (u) : f (u) = (id f )(u) f (u) |u f = |u f (u) (u) = |u (id f )(u) = (id f )(u) |u previous paragraphs. furthermore, proceeding previous para- graphs, extend (u) element 2ru (f, g)(u). finally, dene isomorphism 2ru (f, id f ) a|u -torsors mapping 7 . described section torsors, dene isomorphism suces describe set local sections, dened respect open cover, mapped. thus, = 2ru (f, id f ). shown = 2ru (f, f ) a|u -torsors. one important consequence immediately derived fact exists 2-arrow f f a-torsor i, must global section, trivial. 5.3.7 gerbe maps dier gauge transformations subsection shall show two gerbe maps dier gauge transformation gerbe (i.e., bundle, modulo equivalence). precisely analogous notion bundles: two morphisms f, g : p1 p2 principal g-bundles dier gauge transformation (namely, f g1, bundle automorphism, hence gauge transformation). let f, g : c two gerbe maps, open u x open. shall rst show exists a|u -torsor local 2-arrow : g|u (id f )|u (i.e., global section sheaf 2ru (g, id f )). given f g, dene a|u -torsor 2ru (f, g). let {u} good open cover u, let {s} set local sections dening gerbe automorphism id. let (u) : |u id(u) = |u idd(u) (where |u denotes restriction functors associated inclusions u u) denote natural transformations associated {s}, appearing denition id. let 22if true, simply restrict {s} elements suitable renement. 64 : f |u g|u denote s, interpreted explicitly local 2-arrows. now, shall dene natural transformation g(u) (id f )(u), using gluing law. object p ob c(u), dene morphism f(p ) : g(u)(p )|u (id f )(u)(p )|u by, f(p ) (f (u)(p ))1 (f )1 (u)(p |u)1 g denote natural transformations dening f , g cartesian functors. straightforward check f(p ) satisfy gluing axiom morphisms, dene morphism (u)(p ) : g(u)(p ) (id f )(u)(p ). moreover, straightforward check (u)(p ) dene natural transformation (u) : g(u) (id f )(u). finally, paragraphs earlier argued natural transformation (u) : g(u) (id f )(u) denes local 2-arrow g|u (id f )|u . thus, explicitly constructed global section sheaf 2ru (g, id f ). words, shown two gerbe maps f , g, open u x, exists a|u -torsor local 2-arrow : g|u (id f )|u . (of course, dened isomorphism, always.) note result implies : c c automorphism gerbe c, exists a-torsor equivalent ic : c c, i.e., exists invertible 2-arrow ic. next, suppose f g dene equivalences gerbes connective structure. means also invertible 2-arrows f : coc = cod f g : coc = cod g straightforward check dierence 2-arrows dened choice connection (up equivalence, always). finally, suppose f g dene equivalences gerbes connective structure curving. means addition also invertible 2-arrows f , g above, curving k invariant action 2-arrows. dierence data dened bundle connection, constraint curving invariant becomes constraint connection at. so, dierence two equivalences gerbes connection (connective structure curving) dened bundle connection. passing, mention closely analogous notion bundles. given two morphisms f, g : p1 p2 between, say, principal u(1)-bundles p1, p2 connection, 65 dierence f g1 gauge transformation preserves connection words, constant23 gauge transformation. 5.3.8 maps gerbes equivalences gerbes subsection shall argue map gerbes band, space, necessarily isomorphism. direct analogue statement morphism principal g-bundles, xed g xed space, necessarily isomorphism . let f : c map gerbes c, d, assumed band dened xed space x. shall argue f equivalence gerbes. precisely, shall show functor f (u) : c(u) d(u) equivalence categories, exists functor f (u) : d(u) c(u) invertible natural transformations 1 : f (u) f (u) = idd(u ) 2 : f (u) f (u) = idc(u ) dene functor f (u) : d(u) c(u) objects follows. fix arbitrary object p0 ob c(u). object p ob d(u), dene a|u -torsor dene f (u)(p ) ic(u)(p0). = homu (f (u)(p0), p ) dene f (u) morphisms follows. let : pa pb morphism objects pa, pb ob d(u). dene a|u -torsors homu (f (u)(p0), pa) b homu (f (u)(p0), pb) morphism denes morphism torsors # : b, thus 2-arrow : dene c b c. f (u)() (u)(p0) straightforward check denitions, f (u) well-dened functor d(u) c(u). proving f (u) denes inverse f (u), shall briey attempt provide intuition result. first, note object p ob d(u), exists 2-arrow (f f )(u)(p ) = (f ic)(u)(p0) = (idf )(u)(p0) = p 23assuming base space connected. locally constant, generally. 66 quite sucient prove f equivalence categories, 2-arrow depends upon p , whereas need nd single natural transformation. similarly, using fact homu (f (u)(p0), f (u)(p )) = homu (p0, p ) object p ob c(u), see (f f )(u)(p ) = ic(u)(p0) = p again, remarks intended proofs, intended merely give reader intuition denition f (u) correct one. shall construct invertible natural transformations 1 : f (u) f (u) = idd(u ) 2 : f (u) f (u) = idc(u ) existence natural transformations, together f (u), suce prove f (u) equivalence categories, f : c equivalence gerbes. shall dene 1 : (f f )(u) id follows. let pi family objects d(u), one equivalence class objects d(u). dene family a|u -torsors fix family 2-arrows i: homu (f (u)(p0), pi) : (f c) = (i df ) now, object p ob d(u), let f : p pi morphism p pi, dene 1(p ) : (f f )(u)(p ) p by, 1(p ) f 1 i(u)(p0) (f f )(u)(f ) straightforward check 1(p ) independent choice f , moreover 1(p ) denes natural transformation 1 : f (u) f (u) = idd(u ) shall dene 2 : (f f )(u) id follows. let p family objects c(u), one equivalence class objects c(u). dene families a|u -torsors homu (p0, pi) homu (f (u)(p0), f (u)(pi)) 67 x family 2-arrows : c = c now, object p ob c(u), let f : p p dene 2(p ) : (f f )(u)(p ) p by, morphism p p , 2(p ) f 1 i(u)(p0) (f f )(u)(f ) straightforward check 2(p ) independent choice f , moreover 2(p ) denes natural transformation 2 : f (u) f (u) = idc(u ) thus, gerbe map f : c gerbes band, space, necessarily equivalence gerbes. 6 equivariant gerbes section shall dene notion equivariance group acting space x gerbes dened space x. shall (loosely) follow . shall assume x connected. also mention shall often refer pullbacks stacks gerbes, concepts dened section 4.2. generally, section next, shall often make use results proven sections 4 5, without specic attribution. first, however, shall dene notion equivariant stack. let group acting topological space x homeomorphisms, let c stack x. loosely, c equivariant means gc isomorphic (in appropriate sense) c g . technically, equivariant structure stack c consists following data: 1. cartesian functor g : gc c dening equivalence stacks, g . 2. pair (g1, g2) , invertible 2-arrow g1,g2 : g1g2 = g2 g 2g1 c g1,g2 cartesian functors (g1g2)c c, c analogue natural transformation dened section 4.2.4. g1,g2 : (g1g2)c g 2g 1c 68 moreover, 2-arrows g1,g2 required make following diagram commute: g1g2g3 g1,g2g3 g1g2,g3= g3 g 3g1g2 g1g2,g3 g1,g2 (28) g2g3 (g2g3)g1 g1,g2g3 g2,g3= g3 g 3 (g2 g 2g1 g1,g2) g1g2,g3 note order make sense diagram above, using fact obey g1,g2 g1g2,g3 = g2,g3 g1,g2g3 also g2,g3 (g2g3)g1 = g 3g 2g1 g2,g3 discussed section 4.2.4. equivariant structure gerbe dened equivariant structure underlying stack g : gc c denes equivalence gerbes. shall argue two distinct equivariant structures gerbe dier choice principal g-bundles tg (for = c (g)), one g , set isomorphisms principal g-bundles following diagram commutes: g1,g2 : tg1g2 tg2 g 2tg1 tg1g2g3 g1,g2g3 tg2g3 (g2g3)tg1 modulo equivalences bundles. g1g2,g3 tg3 g 3tg1g2 g1,g2 3 (tg2 g g2,g3 tg3 g 2tg1) (29) passing, point close formal resemblance diagram (29) structures appearing . g : gc c corresponding 2-arrows g1,g2, suppose two distinct equivariant structures gerbe, is, two sets gerbe maps g, g1,g2. first, section 5.3.7, g dier gauge transformation, is, (for band = c (g)) two gerbe maps g, exists principal g-bundle shall denote tg 2-arrow g : g tg g. note used tg denote principal g-bundle associated gerbe automorphism. note slightly sloppy completely specify gerbe automorphism associated bundle tg, would also need specify choice local sections. two choices local sections dene automorphisms dier 2-arrow, changing choice local sections merely corresponds changing g. thus, shall belabor choice local sections further. 69 next, let g1,g2 : tg1g2 tg2 g 2tg1 2-arrow following diagram commutes: g1g2 g1g2 tg1g2 g1g2 g1,g2= g2 g 2g1 g1,g2= tg1g2 (cid:16) g2 g 2 g1(cid:17) 1,2g1,g2= (tg2 g2 g 2 g1 2(tg1 g2) g g1) (30) implicit (omitted aesthetic reasons), used 1,2 denote 2-arrow 1,2 : (tg2 g 2tg1) (cid:16) g2 g 2 g1 g1,g2(cid:17) = (tg2 g2) g 2(tg1 g1) g1,g2 describing commute gauge transformations past gerbe maps. assumed completely arbitrary; shall assume following diagram commutes: (tg3 g 3(tg2 g g3 g 3 (cid:16) g2 g (tg3 g 3tg2) g2 g 2tg1 g 2 2tg1)) 3 (cid:16) g3 g g1(cid:17) = tg3 2 g1(cid:17) = tg3 g3 (tg2 g g3 g 3 (cid:16)tg2 2tg1) (cid:16) g2 g g2 g 2tg1 g 2g1(cid:17) g1(cid:17) 2 omitted g1,g2 g1g2,g3. specication 2-arrow g1,g2 : tg1g2 tg2 g 2tg1 equivalent specication isomorphism principal g-bundles g1,g2 : tg1g2 tg2 g 2tg1 straightforward check requirement diagram (28) commute g1,g2 g1,g2 implies following diagram 2-arrows commutes: tg1g2g3 g1,g2g3 tg2g3 (g2g3)tg1 g1g2,g3= tg3 g 3tg1g2 g1,g2 3 (tg2 g 2tg1) g2,g3= tg3 g (31) implies diagram (29) commutes, claimed. summarize progress far, discovered dierence two equivariant structures gerbe described data (tg, g1,g2) diagram (29) commutes. however, little sloppy. could replace bundles principal g-bundles tg isomorphic bundles g, equivalence classes principal g-bundles relevant. g : tg g isomorphisms, dierence two 2g1)1(cid:17). equivariant structures also described data (cid:16)t g, g1g2 g1,g2 (g2 g end day, recover classication equivariant structures preserving gerbe connection, shall nd h 2(, g). begin working 70 details, take moment explain general idea. first, since automorphisms gerbes connection dened equivalence classes bundles connection, also specify connections bundles tg, isomorphisms g1,g2 forced preserve connections. then, demand connection gerbe invariant gerbe equivalences, precise analogy strategy studying equivariant bundles {$9909108$}. imply two equivariant structures dier set bundles {tg} connection. nd group h 2(, u(1)) taking bundles tg topologically trivial, at, gauge-trivial connections. cocycle representatives elements h 2(, u(1)) dened isomorphisms g1,g2; group cocycle condition come commutivity diagram (29). 7 equivariant gerbes connection previous section dened notion equivariant structure gerbes. section shall extend notion dene equivariant structures gerbes connection (connective structure curving). dened connections gerbes band = c (u(1)), shall assume throughout section gerbes band c (u(1)). let c gerbe equivariant respect action group acting dieomorphisms. circumstances equivariant structure respect connection c ? reader probably guessed, gerbe maps g : gc c required equivalences gerbes connection, must also specify 2-arrows g : gco = co g (recall pullback gerbe connection another gerbe connection connection c naturally induces connection gc. order equivariant structure respect connection, must demand equivalence gerbes g respect connection.) far dened equivariant structures gerbes connection. equivariant structures classied? suppose two equivariant structures gerbe connection, is, two g, g) dening equivalences gerbes connection, g1,g2 satisfying conditions above. two sets gerbe maps (g, g), ( corresponding 2-arrows g1,g2, equivariant structures related? previous section, mentioned pair g, g, exists24 principal 24up isomorphism. 71 u(1)-bundle25 tg 2-arrow g : g tg g, using results section 5.3.7. here, gerbe maps dene equivalences gerbes connection, describe dierence gerbe maps must also specify connection bundle tg, connections constrained at. moreover, commutivity diagram (30), applied connective structures, nd morphisms g1,g2 must preserve connection bundle. words, far found dierence two equivariant structures gerbe connection dened set principal u(1)-bundles tg, connection, together connection-preserving isomorphisms g1,g2 : tg1g2 tg2 g 2tg1 diagram (29) commutes. before, bundles connection dened isomorphism. g : tg g denes set isomorphisms bundles connection, replace data (tg, g1,g2) data (cid:16)t g, g1g2 g1,g2 (g2 g 2g1)1(cid:17). end day, wish nd group h 2(, u(1)) appears describing dierence two equivariant structures. group appears follows. take bundles tg topologically trivial, gauge-trivial connections. then, use fact bundles tg dened isomorphism replace tg canonical trivial bundle identically zero connection. isomorphisms g1,g2 constrained preserve connection, means must constant (assuming underlying space connected). diagram (29) see g1,g2 dene group 2-cocycle. now, even making choice tgs, still residual gauge invariant gauge-transform tg constant gauge transformation, preserves (identically zero) connection tg. clear constant gauge transformations tg change g1,g2 group coboundary. thus, found elements group h 2(, u(1)) lurking dierences two equivariant structures gerbe connection. general, however, additional possible orbifold group actions, beyond classied elements h 2(, u(1)). retrospect, surprised example26, cartan-leray spectral sequence h 2(x/, z) (for freely-acting) contains contributions h 2(, u(1)). shall discuss matter . 25 get principal u (1) bundles assumed band c(u (1)) section. previous section constraint band. 26 lest give wrong impression, classifying equivariant structures thing calculating cohomology, special cases, cohomology calculations shed light. 72 8 check: loop spaces section shall shed light methods results previous two sections thinking gerbes terms loop spaces. first, note principal u(1) bundle p connection manifold determines u(1)-valued function lm, loop space m. precisely, loop m, assign element u(1) given value wilson loop. thus, wilson loops assign elements u(1) loop m, dene u(1)-valued function lm. assignment above, u(1)-valued functions lm principal u(1) bundles connection m, basic example general principle. namely, n-gerbe connection manifold m, one assign (n 1)-gerbe connection loop space lm. (this seen terms deligne cohomology; see, example, .) relevantly paper, (1-)gerbe connection (and band c (u(1))) manifold m, one assign27 principal u(1) bundle connection loop space lm. (for details, see, example, ; derivation fact level deligne cohomology also given {$9909108$}.) thus, reader might naively led suspect equivariant gerbe space equivalent equivariant bundle lm. unfortunately, quite correct. essential diculty that, general, map n-gerbes (n 1)-gerbes lm many-to-one map. example, consider map principal u(1) bundles u(1)-valued functions lm dened wilson loops, described beginning section. specifying wilson loops every loop manifold (i.e., specifying u(1)-valued function lm) uniquely determine principal u(1) bundle connection. instead, set wilson loops determines equivalence class principal u(1) bundles connection . present situation, (1-)gerbe connection uniquely determined principal u(1) bundle connection lm, completely describe equivariant gerbes connection terms equivariant bundles connection lm. however, true equivariant structure gerbe connection determine equivariant structure corresponding bundle connection lm. shall merely outline results. recall equivariant structure gerbe c 27strictly speaking, (1-)gerbe connective structure , assign bundle lm . curving connective structure used dene connection bundle lm . see  details. framework, gerbe maps become morphisms principal bundles (more generally, torsors) lm , gerbe maps related invertible 2-arrows map morphism principal bundles lm . 73 connection dened collection gerbe maps g : gc c invertible 2-arrows g1,g2 : g1g2 = g2 g 2g1 c g1,g2 subject various constraints. shall let p denote bundle connection lm corresponding gerbe c m. gerbe maps g become bundle isomorphisms g : gp p , existence invertible 2-arrows g1,g2 implies g1g2 = g1 g 2g1, which, recall {$9909108$}, denes equivariant structure bundle p . recall {$9909108$} pointed equivariant structure bundle connection could obtained equivariant structure via set constant gauge transfor- mations. present context, however, slight subtlety. gauge transformations p lm determined principal u(1) bundles connection m, is, u(1)- valued functions lm. however, u(1)-valued functions lm understood terms wilson loops bundles connection m. fact, constant u(1)- valued function lm understood terms wilson loops bundles connection m, trivial constant function identity points lm. see fact, suppose l principal u(1) bundle connection property wilson loops equal (single) element u(1), call x. let w () denote value wilson loop loop , clear w (2) = w ()2 or, words, x = x2. x u(1), way satised x identity. thus, constant gauge transformations lm understood coming bundles connection identically identity. lm connected, one constant gauge transformation allowed equivariant structures p lm. reader might incorrectly conclude must mean one equivariant structure gerbe connection. problem argument map bundles (with connection) functions lm many-to-one map. level loop space lm, one equivariant structure; however, actually multiple equivariant structures gerbe m, map equivariant structure bundle p lm. classify equivariant structures gerbe connection, must return analysis previous section. passing, however, one slight additional bit insight gained thinking terms loop spaces. argued lm, lm connected, one equivariant structure bundle p ; diered constant gauge transformation lm. however, specifying constant gauge transformation lm determines equivalence class bundles connection 74 m. previous section, found equivariant structures gerbe connection determined set isomorphisms (trivial) bundles (trivial) connection; see isomorphisms must preserve trivial connection, must constant, order remain within equivalence class determined trivial constant gauge transformation lm. sheds light constraints isomorphisms determined previous section. general, lm one component element 1(m). dierences equivariant structures bundle connection non-simply-connected space described constant gauge transformations, rather locally constant gauge transfor- mations. degrees freedom correspond taking bundles tg connection at, nontrivial. 9 conclusions paper accomplished two things. first, given thorough review gerbes terms stacks, relatively basic level (i.e., without using language sites). second, discussed classication equivariant structures (1-)gerbes connection, proven general set equivariant structures torsor group includes h 2(, u(1)), claimed {$9909108$}, providing simple geometric understanding discrete torsion. 10 acknowledgements would like thank p. aspinwall, d. freed, a. knutson, d. morrison, r. plesser useful conversations.